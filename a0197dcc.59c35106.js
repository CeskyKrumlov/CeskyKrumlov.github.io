(window.webpackJsonp=window.webpackJsonp||[]).push([[331],{388:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(2),a=n(6),i=(n(0),n(574)),o={id:"14.DiyMVC",title:"\u81ea\u5236 Web MVC \u6846\u67b6",hide_title:!0},s={unversionedId:"springmvc/14.DiyMVC",id:"springmvc/14.DiyMVC",isDocsHomePage:!1,title:"\u81ea\u5236 Web MVC \u6846\u67b6",description:"\u81ea\u5236 Web MVC \u6846\u67b6",source:"@site/docs/springmvc/14.\u81ea\u5236 Web MVC \u6846\u67b6.md",slug:"/springmvc/14.DiyMVC",permalink:"/docs/springmvc/14.DiyMVC",version:"current",sidebar:"someSidebar",previous:{title:"\u5bfc\u51faExcel",permalink:"/docs/springmvc/14.excel"},next:{title:"\u6574\u5408mybatis",permalink:"/docs/ssm/1.mybatis"}},l=[{value:"\u81ea\u5236 Web MVC \u6846\u67b6",id:"\u81ea\u5236-web-mvc-\u6846\u67b6",children:[]},{value:"Request \u7c7b",id:"request-\u7c7b",children:[]},{value:"SocketOperator \u7c7b",id:"socketoperator-\u7c7b",children:[]},{value:"Server \u7c7b",id:"server-\u7c7b",children:[]},{value:"Route \u7c7b \uff08Controller\uff09",id:"route-\u7c7b-\uff08controller\uff09",children:[{value:"\u5b50\u6a21\u5757\u7684 Route",id:"\u5b50\u6a21\u5757\u7684-route",children:[]},{value:"\u9875\u9762\u672a\u627e\u5230 404 \u7684\u8def\u7531",id:"\u9875\u9762\u672a\u627e\u5230-404-\u7684\u8def\u7531",children:[]}]},{value:"FreeMarkerTemplate \u7c7b",id:"freemarkertemplate-\u7c7b",children:[]},{value:"Response \u54cd\u5e94",id:"response-\u54cd\u5e94",children:[]},{value:"\u670d\u52a1\u5668\u542f\u52a8",id:"\u670d\u52a1\u5668\u542f\u52a8",children:[]}],c={rightToc:l};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("br",null),Object(i.b)("h1",{id:"\u81ea\u5236-web-mvc-\u6846\u67b6"},"\u81ea\u5236 Web MVC \u6846\u67b6"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"\u4e00\u4e2a Web MVC \u6846\u67b6\u8981\u5b9e\u73b0\u7684\u529f\u80fd"),Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},"\u63a5\u6536\u5ba2\u6237\u7aef\u53d1\u6765\u7684 HTTP Request \u8bf7\u6c42"),Object(i.b)("li",{parentName:"ul"},"\u5728\u4f20\u8f93\u5c42\uff0c\u4f7f\u7528 TCP/IP \u786e\u5b9a IP \u5730\u5740\u3001\u7aef\u53e3\u53f7\u7b49\uff0c\u5728\u9ad8\u7ea7\u8bed\u8a00\u5c42\u9762\u5bf9\u5e94 Socket \u7f16\u7a0b"),Object(i.b)("li",{parentName:"ul"},"\u57fa\u4e8e HTTP \u534f\u8bae\u89e3\u6790 \uff08\u8bf7\u6c42\u5934\u3001\u8bf7\u6c42\u4f53\u3001Path\u3001Query \u7b49\uff09\u8fd9\u4e2a\u8bf7\u6c42\uff0c\u628a ",Object(i.b)("inlineCode",{parentName:"li"},"\u8bf7\u6c42\u5206\u53d1")," \u5230\u5bf9\u5e94\u7684\u51fd\u6570\u3001\u65b9\u6cd5\uff0c\u540c\u65f6\u4f20\u9012\u8bf7\u6c42\u643a\u5e26\u7684 ",Object(i.b)("inlineCode",{parentName:"li"},"\u53c2\u6570")),Object(i.b)("li",{parentName:"ul"},"\u5c06\u5904\u7406\u5b8c\u6bd5\u7684\u5185\u5bb9\uff0c\u4ee5 ",Object(i.b)("inlineCode",{parentName:"li"},"byte[]")," \u683c\u5f0f\u4f5c\u4e3a\u54cd\u5e94\u4f53\uff0c\u914d\u5408\u54cd\u5e94\u5934\u7b49\uff0c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"\u54cd\u5e94\u4f53\u5185\u5bb9\u5e94\u5f53\u662f\u4e00\u4e2a HTML \u6587\u4ef6"),Object(i.b)("li",{parentName:"ul"},"HTML \u6587\u4ef6\u5927\u90e8\u5206\u5185\u5bb9\u662f\u9759\u6001\u4e0d\u53d8\u7684\uff0c\u5c11\u90e8\u5206\u662f\u52a8\u6001\u7684\uff0c\u5373\u540e\u53f0\u7684\u6570\u636e\uff0c\u6839\u636e\u4e1a\u52a1\u903b\u8f91\u8fdb\u884c\u586b\u5145"),Object(i.b)("li",{parentName:"ul"},"\u6b64\u5904\u4f7f\u7528 FreeMarker \u6a21\u677f\u5f15\u64ce"))))),Object(i.b)("h1",{id:"request-\u7c7b"},"Request \u7c7b"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"\u5b9a\u4e49\u4e00\u4e2a\u7c7b\uff0c\u5bf9\u5e94\u4e00\u4e2a HTTP \u8bf7\u6c42\u5b9e\u4f53\uff0c\u5305\u542b"),Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},"HTTP \u8bf7\u6c42\u65b9\u6cd5 method \uff08GET\u3001POST \u7b49\uff09"),Object(i.b)("li",{parentName:"ul"},"\u8bf7\u6c42\u5934 headers"),Object(i.b)("li",{parentName:"ul"},"\u8def\u5f84 path\uff0c\u540e\u9762\u53ef\u4ee5\u62fc\u4e00\u4e2a ",Object(i.b)("inlineCode",{parentName:"li"},"?")," \uff0c",Object(i.b)("inlineCode",{parentName:"li"},"?")," \u4e4b\u540e\u7684\u90e8\u5206\u662f query \u53c2\u6570"),Object(i.b)("li",{parentName:"ul"},"\u8bf7\u6c42\u4f53 body \u4e5f\u53ef\u4ee5\u643a\u5e26\u53c2\u6570"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"http://jsonplaceholder.com/comments?postId=1"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"http"),"\uff1a\u4e3a\u534f\u8bae"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"jsonplaceholder.com"),"\uff1a\u4e3a\u4e3b\u673a ",Object(i.b)("inlineCode",{parentName:"li"},"HOST")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"comments"),"\uff1a\u4e3a\u8def\u5f84 ",Object(i.b)("inlineCode",{parentName:"li"},"path")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"postId=1"),"\uff1a\u4e3a\u53c2\u6570 ",Object(i.b)("inlineCode",{parentName:"li"},"query")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"\u8bf7\u6c42\u8fc7\u6765\u5c31\u662f\u4e00\u4e2a\u5927\u5b57\u7b26\u4e32\uff0c\u901a\u8fc7\u5b57\u7b26\u4e32\u88c1\u526a\uff0c\u9010\u6b65\u89e3\u6790\u51fa\u8fd9\u4e9b\u5185\u5bb9\uff0c\u5e76\u586b\u5145\u5230 Request \u7c7b\u4e2d\u7684\u6210\u5458\u53d8\u91cf\u91cc\uff0c\u65b9\u4fbf\u540e\u7eed\u4e1a\u52a1\u903b\u8f91\u76f4\u63a5\u4f7f\u7528"))),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java",metastring:'title="Request \u7c7b"',title:'"Request','\u7c7b"':!0}),'public class Request {\n// header, body\n    // header \u91cc\u9762\u53c8\u5206\u8bf7\u6c42\u884c, \u548c\u5176\u4ed6\u90e8\u5206\n    // \u8bf7\u6c42\u884c\u91cc\u9762\u53c8\u5206  method(Get, Post), path\n    // path \u91cc\u9762\u53ef\u4ee5\u5e26\u53c2\u6570\n    // Body \u91cc\u9762\u4e5f\u53ef\u4ee5\u5e26\u53c2\u6570\n\n    public String rawData;\n    public String method;\n    public String path;\n    public String body;\n    public HashMap<String, String> query; // path \u540e\u9762?\u62fc\u7684\u53c2\u6570\n    public HashMap<String, String> form; // body \u91cc\u7684\u6570\u636e\n    public HashMap<String, String> headers; // \u8bf7\u6c42\u5934\n    public HashMap<String, String> cookies;\n\n    public Request(String rawRequest) {\n        this.rawData = rawRequest;\n        String[] parts = rawRequest.split("\\r\\n\\r\\n", 2);\n        this.body = parts[1]; // \u5207\u51fa\u8bf7\u6c42\u4f53\n        String headers = parts[0]; // \u5207\u51fa\u8bf7\u6c42\u5934\n        this.addHeaders(headers); // \u8c03\u7528\u65b9\u6cd5\uff0c\u89e3\u6790\u8bf7\u6c42\u5934\u5e76\u5b58\u5165map\n\n        String[] lines = headers.split("\\r\\n");\n        String requestLine = lines[0];\n        String[] requestLineData = requestLine.split(" ");\n        this.method = requestLineData[0]; // \u5207\u51fa\u8bf7\u6c42\u65b9\u6cd5 GET\u3001POST\n \n        this.parsePath(requestLineData[1]); // \u5207\u51fa\u8bf7\u6c42\u8def\u5f84 /add,/query \u7b49\uff0c\u53ef\u80fd\u5728\u540e\u9762\u62fc\u7740 ?id=1 \u8fd9\u79cd\u4e1c\u897f\n        this.parseForm(body); // \u89e3\u6790\u8bf7\u6c42\u4f53\n\n        log("path query: %s", this.query);\n    }\n\n    private void addHeaders(String headerString) {\n        this.headers = new HashMap<>();\n        String[] lines = headerString.split("\\r\\n");\n        for (int i = 1; i < lines.length; i++) {\n            String line = lines[i];\n            String[] kv = line.split(":", 2);\n            this.headers.put(kv[0].strip(), kv[1].strip());\n        }\n\n        if(this.headers.containsKey("Cookie")) {\n            this.cookies = new HashMap<>();\n            String cookieString = this.headers.get("Cookie");\n            String args[] = cookieString.split(";");\n            for (String kvString: args) {\n                String[] kv = kvString.split("=", 2);\n                if (kv.length >= 2) {\n                    this.cookies.put(kv[0].strip(), kv[1].strip());\n                } else {\n                    this.cookies.put(kv[0].strip(), kv[0].strip());\n                }\n            }\n        } else {\n            this.cookies = new HashMap<>();\n        }\n    }\n\n    private static void log(String format, Object... args) {\n        System.out.println(String.format(format, args));\n    }\n\n    private void parsePath(String path) {\n        // path = URLDecoder.decode(path, StandardCharsets.UTF_8);\n        Integer index = path.indexOf("?");\n\n        if (index.equals(-1)) { // \u6ca1\u6709\u643a\u5e26 query\u53c2\u6570\n            this.path = path;\n            this.query = null;\n        } else { // \u643a\u5e26\u4e86 query\u53c2\u6570 \u628aquery\u6363\u9f13\u51fa\u6765\n            this.path = path.substring(0, index);\n            String queryString = path.substring(index + 1);\n            log("queryString: %s", queryString);\n            // query \u53c2\u6570\u4e4b\u95f4\u7528 & \u5206\u5272\u7684\n            String[] args = queryString.split("&");\n            this.query = new HashMap<>();\n            for (String e: args) {\n                // author=\n                log("e: %s", e);\n                // \u6bcf\u4e00\u4e2aquery\u53c2\u6570\u53c8\u662f key=value \u7684\u5f62\u5f0f\n                String[] kv = e.split("=", 2);\n                String k = URLDecoder.decode(kv[0], StandardCharsets.UTF_8);\n                String v = URLDecoder.decode(kv[1], StandardCharsets.UTF_8);\n                log("k: <%s>, v: <%s>", k, v);\n                this.query.put(k, v);\n            }\n\n            // \u7b49\u4ef7\u4e8e\u4e0b\u9762\n            // for (int i = 0; i < args.length; i++) {\n            //     String e = args[i];\n            // }\n        }\n    }\n\n    private void parseForm(String body) {\n        // ""\n        // "   "\n        body = body.strip();\n        String contentType = this.headers.get("Content-Type");\n        if (contentType == null) {\n            this.form = new HashMap<>();\n        } else if (contentType.equals("application/x-www-form-urlencoded")) {\n            if (body.length() > 0) {\n                // author=ddd&message=ddd\n                String formString = body;\n                log("queryString: %s", formString);\n                String[] args = formString.split("&");\n                this.form = new HashMap<>();\n                for (String e: args) {\n                    // author=\n                    log("e: %s", e);\n                    String[] kv = e.split("=", 2);\n                    String k = URLDecoder.decode(kv[0], StandardCharsets.UTF_8);\n                    String v = URLDecoder.decode(kv[1], StandardCharsets.UTF_8);\n                    log("k: <%s>, v: <%s>", k, v);\n                    this.form.put(k, v);\n                }\n            }\n        } else if (contentType.equals("application/json")) {\n            this.form = new HashMap<>();\n        } else {\n            this.form = new HashMap<>();\n        }\n    }\n}\n'))),Object(i.b)("h1",{id:"socketoperator-\u7c7b"},"SocketOperator \u7c7b"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"\u63a5\u6536\u4e00\u4e2a socket \u5bf9\u8c61\uff0c\u5c01\u88c5\u5b83\uff0c\u4f7f\u5f97\u57fa\u4e8e socket \u7684\u63a5\u6536\u3001\u53d1\u9001\u64cd\u4f5c\u53d8\u7b80\u5355"),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'public class SocketOperator {\n    private static void log(String format, Object... args) {\n        System.out.println(String.format(format, args));\n    }\n\n    public static String socketReadAll(Socket socket) throws IOException {\n        InputStream input = socket.getInputStream();\n        InputStreamReader reader = new InputStreamReader(input);\n        int bufferSize = 100;\n        // \u521d\u59cb\u5316\u6307\u5b9a\u957f\u5ea6\u7684\u6570\u7ec4\n        char[] data = new char[bufferSize];\n        // \u901a\u5e38\u6211\u4eec\u4f1a\u7528 StringBuilder \u6765\u5904\u7406\u5b57\u7b26\u4e32\u62fc\u63a5\n        // \u5b83\u6bd4 String \u76f8\u52a0\u8fd0\u884c\u6548\u7387\u5feb\u5f88\u591a\n        StringBuilder sb = new StringBuilder();\n        while (true) {\n            // \u8bfb\u53d6\u6570\u636e\u5230 data \u6570\u7ec4\uff0c\u4ece 0 \u8bfb\u5230 data.length\n            // size \u662f\u8bfb\u53d6\u5230\u7684\u5b57\u8282\u6570\n            int size = reader.read(data, 0, data.length);\n\n            // \u5224\u65ad\u662f\u5426\u8bfb\u5230\u6570\u636e\n            if (size > 0) {\n                sb.append(data, 0, size);\n            }\n            // \u628a\u5b57\u7b26\u6570\u7ec4\u7684\u6570\u636e\u8ffd\u52a0\u5230 sb \u4e2d\n            log("size and data: " + size + " || " + data.length);\n            // \u8bfb\u5230\u7684 size \u6bd4 bufferSize \u5c0f\uff0c\u8bf4\u660e\u5df2\u7ecf\u8bfb\u5b8c\u4e86\n            if (size < bufferSize) {\n                break;\n            }\n        }\n        return sb.toString();\n    }\n\n    public static void socketSendAll(Socket socket, byte[] r) throws IOException {\n        OutputStream output = socket.getOutputStream();\n        output.write(r);\n    }\n}\n'))),Object(i.b)("h1",{id:"server-\u7c7b"},"Server \u7c7b"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("strong",{parentName:"p"},"\u670d\u52a1\u5668\u5b9e\u4f53")),Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},"\u8fd9\u91cc\u5199\u7684\u5c31\u662f\u6700\u5b8f\u89c2\u7684 MVC \u670d\u52a1\u5668\u7684\u903b\u8f91"),Object(i.b)("li",{parentName:"ul"},"\u5f00\u4e00\u4e2a socket \u7b49\u5f85\u8fde\u63a5"),Object(i.b)("li",{parentName:"ul"},"\u89e3\u6790 HTTP \u8bf7\u6c42\uff0c\u6784\u5efa\u4e00\u4e2a Request \u7c7b\u7684\u5bf9\u8c61\u51fa\u6765"),Object(i.b)("li",{parentName:"ul"},"\u6839\u636e Path \u628a\u8fd9\u4e2a Request \u4f20\u9012\u5230\u4e1a\u52a1\u5c42\u5bf9\u5e94\u7684\u65b9\u6cd5\u8fdb\u884c\u5904\u7406"),Object(i.b)("li",{parentName:"ul"},"\u628a\u5904\u7406\u597d\u7684\u540e\u7aef\u6570\u636e\uff0c\u901a\u8fc7 FreeMarker \u6a21\u677f\u5f15\u64ce\u5d4c\u5165\u5230\u4e00\u4e2a HTML \u6587\u4ef6\u4e2d"),Object(i.b)("li",{parentName:"ul"},"\u628a\u8fd9\u4e2a HTML \u4ee5 ",Object(i.b)("inlineCode",{parentName:"li"},"byte[]")," \u7684\u5f62\u5f0f\uff0c\u901a\u8fc7 socket \u8fd4\u56de\u5ba2\u6237\u7aef")),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'public class Server {\n    static ArrayList<Message> messageList = MessageService.load();\n\n    public static void run(Integer port) {\n        // \u76d1\u542c\u8bf7\u6c42\n        // \u83b7\u53d6\u8bf7\u6c42\u6570\u636e\n        // \u53d1\u9001\u54cd\u5e94\u6570\u636e\n        // \u6211\u4eec\u7684\u670d\u52a1\u5668\u4f7f\u7528 9000 \u7aef\u53e3\n        // \u4e0d\u4f7f\u7528 80 \u7684\u539f\u56e0\u662f 1024 \u4ee5\u4e0b\u7684\u7aef\u53e3\u90fd\u8981\u7ba1\u7406\u5458\u6743\u9650\u624d\u80fd\u4f7f\u7528\n        // int port = 9000;\n        Utils.log("\u670d\u52a1\u5668\u542f\u52a8, \u8bbf\u95ee http://localhost:%s", port);\n        try (ServerSocket serverSocket = new ServerSocket(port)) {\n            while (true) {\n                // accept \u65b9\u6cd5\u4f1a\u4e00\u76f4\u505c\u7559\u5728\u8fd9\u91cc\u7b49\u5f85\u8fde\u63a5\n                try (Socket socket = serverSocket.accept()) {\n                    // \u5ba2\u6237\u7aef\u8fde\u63a5\u4e0a\u6765\u4e86\n                    Utils.log("client \u8fde\u63a5\u6210\u529f");\n                    // \u8bfb\u53d6\u5ba2\u6237\u7aef\u8bf7\u6c42\u6570\u636e\n                    String request = SocketOperator.socketReadAll(socket);\n                    byte[] response;\n                    if (request.length() > 0) {\n                        // \u8f93\u51fa\u54cd\u5e94\u7684\u6570\u636e\n                        Utils.log("\u8bf7\u6c42:\\n%s", request);\n                        // \u89e3\u6790 request \u5f97\u5230 path\n                        Request r = new Request(request);\n                        // \u6839\u636e path \u6765\u5224\u65ad\u8981\u8fd4\u56de\u4ec0\u4e48\u6570\u636e\n                        // byte[] \u6570\u7ec4\u63a5\u6536\n                        response = responseForPath(r);\n                    } else {\n                        response = new byte[1];\n                        Utils.log("\u63a5\u53d7\u5230\u4e86\u4e00\u4e2a\u7a7a\u8bf7\u6c42");\n                    }\n                    SocketOperator.socketSendAll(socket, response);\n                }\n            }\n        } catch (IOException ex) {\n            System.out.println("exception: " + ex.getMessage());\n        }\n    }\n\n    // \u5206\u53d1 Request \u5230\u5bf9\u5e94\u7684\u4e1a\u52a1\u903b\u8f91\u6a21\u5757\n    // \u76f8\u5f53\u4e8e SpringMVC \u7684 @RequestMapping\n    private static byte[] responseForPath(Request reqeust) {\n        HashMap<String, Function<Request, byte[]>> map = Route.routeMapAll(); // \u901a\u8fc7 Route \u7c7b\u7684 routeMapAll() \u65b9\u6cd5\u83b7\u53d6\u6240\u6709 path \u5230\u4e1a\u52a1\u65b9\u6cd5\u7684\u6620\u5c04\uff0c\u540e\u9762\u4f1a\u8bf4\n        Function<Request, byte[]> function = map.getOrDefault(reqeust.path, Route::route404); // \u80fd\u627e\u5230\u5b58\u5728\u7684\u6620\u5c04\uff0c\u5c31\u83b7\u53d6\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u5e76\u6267\u884c\uff1b\u627e\u4e0d\u5230\uff0c\u5c31\u53bb\u6267\u884c route404\u8fd9\u4e2a\u65b9\u6cd5\n        byte[] response = function.apply(reqeust);\n        return response;\n    }\n}\n'))),Object(i.b)("h1",{id:"route-\u7c7b-\uff08controller\uff09"},"Route \u7c7b \uff08Controller\uff09"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"\u76f8\u5f53\u4e8e SpringMVC \u4e2d\u7684 Controller"),Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},"\u8981\u5b9e\u73b0\u7684\u529f\u80fd\u662f\uff1a\u8ba9 path \u89e6\u53d1\u5bf9\u5e94\u7684\u4e1a\u52a1\u5c42\u65b9\u6cd5"),Object(i.b)("li",{parentName:"ul"},"SpringMVC \u4e2d\uff1a\u6bd4\u5982\u8981\u6dfb\u52a0\u4e00\u4e2a\u7528\u6237\uff0cRESTFul \u7684\u8bf7\u6c42 path \u662f ",Object(i.b)("inlineCode",{parentName:"li"},"/add"),"\uff0c\u90a3\u4e48\u6211\u4eec\u4f1a\u5728 Controller \u7684\u67d0\u4e2a\u65b9\u6cd5\u4e0a\u52a0 ",Object(i.b)("inlineCode",{parentName:"li"},'@RequestMapping("/add")')," \u6ce8\u89e3\uff0c\u4e4b\u540e ",Object(i.b)("inlineCode",{parentName:"li"},"/add")," \u5c31\u4f1a\u89e6\u53d1\u8fd9\u4e2a\u88ab\u6ce8\u89e3\u7684\u65b9\u6cd5")),Object(i.b)("h3",Object(r.a)({parentName:"blockquote"},{id:"\u76f4\u89c2\u5b9e\u73b0\u65b9\u6cd5"}),"\u76f4\u89c2\u5b9e\u73b0\u65b9\u6cd5"),Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},"\u7528 ",Object(i.b)("inlineCode",{parentName:"li"},"if..else")," \u5224\u65ad path\uff0c\u4f1a\u51fa\u73b0\u5982\u4e0b\u4ee3\u7801")),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java",metastring:'title="if..else \u4f2a\u4ee3\u7801"',title:'"if..else','\u4f2a\u4ee3\u7801"':!0}),'if (path.equals("/add")) {\n    add(); // \u6267\u884c add \u65b9\u6cd5\n} else if (path.equals("/delete")) {\n    delete(); // \u6267\u884c delete \u65b9\u6cd5\n} // ....\n')),Object(i.b)("p",{parentName:"blockquote"},"\u663e\u7136\u8fd9\u79cd\u5199\u6cd5\u975e\u5e38\u70c2\uff0c\u70c2\u5728\uff1a"),Object(i.b)("ol",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ol"},Object(i.b)("strong",{parentName:"li"},"\u6bcf\u52a0\u4e00\u4e2a Path \u8fd9\u6bb5 if...else \u90fd\u8981\u6539\uff0c\u800c\u56de\u60f3\u4e00\u4e0b SpringMVC \u7684\u8fd9\u4e00\u90e8\u5206\u903b\u8f91\u7528\u6237\u6839\u672c\u4e0d\u7528\u7ba1\uff0c\u76f4\u63a5\u6ce8\u89e3\u5c31\u5b8c\u4e8b\u4e86")),Object(i.b)("li",{parentName:"ol"},"\u5fc5\u987b\u4e00\u4e2a\u4e00\u4e2a\u5224\u65ad\u8fc7\u53bb\uff0c\u6027\u80fd\u4e0d\u597d\uff0c\u5e94\u8be5\u5f04\u4e00\u79cd\u4e00\u6b21\u5b9a\u4f4d\u5230\u5bf9\u5e94\u65b9\u6cd5\u7684\u5199\u6cd5"),Object(i.b)("li",{parentName:"ol"},"\u53ef\u8bfb\u6027\u5dee")),Object(i.b)("h3",Object(r.a)({parentName:"blockquote"},{id:"\u5229\u7528-hashmap-\u548c\u51fd\u6570\u5f0f\u63a5\u53e3"}),"\u5229\u7528 HashMap \u548c\u51fd\u6570\u5f0f\u63a5\u53e3"),Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},"HashMap \u901a\u8fc7 HashCode \u67e5\u8be2\uff0c\u4e00\u6b65\u5230\u4f4d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 O(1)"),Object(i.b)("li",{parentName:"ul"},"\u51fd\u6570\u5f0f\u63a5\u53e3\u5b9e\u73b0 Map \u91cc\u5b58\u65b9\u6cd5\u7684\u5f15\u7528\uff0cvalue \u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u63a5\u53d7\u4e00\u4e2a Request \u8fd4\u56de\u4e00\u4e2a byte[]\uff0cKey \u5c31\u662f Path\uff0c"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Function<Request, byte[]>")," \u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u610f\u601d\u4f20\u5165\u4e00\u4e2a Request \u8fd4\u56de\u4e00\u4e2a byte[]")),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"})," HashMap<String, Function<Request, byte[]>> map = new HashMap<>();\n")),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java",metastring:'title="Route \u7c7b\u4e2d\u7684\u8def\u7531\u5206\u53d1\u903b\u8f91" {10-13}',title:'"Route','\u7c7b\u4e2d\u7684\u8def\u7531\u5206\u53d1\u903b\u8f91"':!0,"{10-13}":!0}),'public class Route {\n    public static HashMap<String, Function<Request, byte[]>> routeMapAll() {\n        HashMap<String, Function<Request, byte[]>> map = new HashMap<>();\n        // map.put("/doge.gif", Route::routeImage);\n        // map.put("/doge1.jpg", Route::routeImage);\n        // map.put("/doge2.gif", Route::routeImage);\n        map.put("/static", Route::routeImage);\n\n        // \u628a\u5176\u4ed6\u5b50\u6a21\u5757\u4e2d\u7684 \u6620\u5c04Map \u4e5f\u6dfb\u52a0\u8fc7\u6765\uff0c\u96c6\u5408\u5728\u4e00\u8d77\n        map.putAll(RouteTodo.routeMap());\n        map.putAll(RouteUser.routeMap());\n        map.putAll(RoutePublic.routeMap());\n        map.putAll(RouteAjaxTodo.routeMap());\n        return map;\n    }\n    // \u5e26\u54cd\u5e94\u5934\u7684\u54cd\u5e94\u65b9\u6cd5\n    public static String responseWithHeader(int code, HashMap<String, String> headerMap, String body) {\n        String header = String.format("HTTP/1.1 %s\\r\\n", code);\n\n        for (String key: headerMap.keySet()) {\n            String value = headerMap.get(key);\n            String item = String.format("%s: %s \\r\\n", key, value);\n            header = header + item;\n        }\n        String response =  String.format("%s\\r\\n%s", header, body);\n        return response;\n    }\n}\n'))),Object(i.b)("h2",{id:"\u5b50\u6a21\u5757\u7684-route"},"\u5b50\u6a21\u5757\u7684 Route"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("strong",{parentName:"p"},"\u4ee5\u7528\u6237\u6a21\u5757\u4e3a\u4f8b")),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java",metastring:'title="\u7528\u6237\u6a21\u5757\u7684 Route" {5,6}',title:'"\u7528\u6237\u6a21\u5757\u7684','Route"':!0,"{5,6}":!0}),'public class RouteUser {\n        public static HashMap<String, Function<Request, byte[]>> routeMap() {\n            HashMap<String, Function<Request, byte[]>> map = new HashMap<>();\n            // path\uff0c\u52a0\u65b9\u6cd5\u5f15\u7528\uff0c\u6307\u5411\u672c\u7c7b\u4e2d\u7684\u65b9\u6cd5\n            map.put("/login", RouteUser::login);\n            map.put("/register", RouteUser::register);\n            return map;\n        }\n\n        public static byte[] login(Request request) {\n            HashMap<String, String> header = new HashMap<>();\n            header.put("Content-Type", "text/html");\n            HashMap<String, String> data = null;\n            if (request.method.equals("POST")) {\n                data = request.form;\n            }\n\n            Utils.log("login: <%s>", data);\n\n            String loginResult = "";\n            Utils.log("login before data");\n            if (data != null) {\n                Utils.log("login data not null");\n                String username = data.get("username");\n                String password = data.get("password");\n                if (UserService.validLogin(username, password)) {\n                    String sessionId = UUID.randomUUID().toString();\n                    User user = UserService.findByUsername(username);\n                    SessionService.add(sessionId, user.id);\n                    header.put("Set-Cookie", String.format("session_id=%s", sessionId));\n                    loginResult = "\u767b\u5f55\u6210\u529f";\n                } else {\n                    loginResult = "\u767b\u5f55\u5931\u8d25";\n                }\n            }\n\n            HashMap<String, Object> d = new HashMap<>();\n            // \u540e\u7aef\u5904\u7406\u751f\u6210\u7684\u6570\u636e\u5b58\u5230 HashMap \u91cc\n            d.put("result", loginResult);\n            // \u628a\u6570\u636e \u901a\u8fc7 FreeMarker \u6a21\u677f\u7c7b\u6e32\u67d3\u4ec5 ftl \u751f\u6210\u6700\u7ec8\u7684 HTML \u6587\u4ef6\n            String body = FreeMarkerTemplate.render(d, "login.ftl");\n            \n            // \u8c03\u7528 Route \u7684 responseWithHeader\uff0c\u586b\u5165\u72b6\u6001\u7801\uff0c\u54cd\u5e94\u5934\u3001\u8bf7\u6c42\u4f53\u5c31\u662f\u6e32\u67d3\u597d\u7684 HTML \u6587\u4ef6\n            String response = Route.responseWithHeader(200, header, body);\n            return response.getBytes(StandardCharsets.UTF_8);\n        }\n    \n    // ....\n}\n')),Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},"\u7528 Map \u5b58\u50a8\u8fd9\u79cd\u6620\u5c04\u5173\u7cfb\uff0c\u5176\u4e2d value \u662f\u4e00\u4e2a\u65b9\u6cd5\u5f15\u7528 ",Object(i.b)("inlineCode",{parentName:"li"},"RouteUser::login")),Object(i.b)("li",{parentName:"ul"},"\u8fd9\u5176\u5b9e\u662f Lambda \u8868\u8fbe\u5f0f\u7684\u66f4\u7cbe\u7b80\u5199\u6cd5\uff0c\u8fd9\u91cc\u672c\u6765\u662f lambda \u8868\u8fbe\u5f0f\uff0c\u4f20\u5165\u7684\u53c2\u6570\u662f ",Object(i.b)("inlineCode",{parentName:"li"},"Request"),"\uff0c\u8868\u8fbe\u5f0f\u4e2d\u5c06 ",Object(i.b)("inlineCode",{parentName:"li"},"Requset")," \u518d\u4f20\u9012\u7ed9 ",Object(i.b)("inlineCode",{parentName:"li"},"RoutUser.login(request)")," \u65b9\u6cd5\uff0c\u800c\u8fd9\u4e2a\u65b9\u6cd5\u7684\u63a5\u6536\u7684\u53c2\u6570\u6b63\u597d\u5c31\u662f\u4e00\u4e2a ",Object(i.b)("inlineCode",{parentName:"li"},"Request"),"\u3002\u5373\uff0c\u5f53 lambda \u8868\u8fbe\u5f0f\u4f20\u5165\u7684\u53c2\u6570\u548c\u8868\u8fbe\u5f0f\u4e2d\u8c03\u7528\u7684\u90a3\u4e2a\u65b9\u6cd5\u63a5\u6536\u7684\u53c2\u6570\u4e00\u6a21\u4e00\u6837\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u5199\u6210\u65b9\u6cd5\u5f15\u7528\u7684\u5f62\u5f0f\uff08\u5177\u4f53\u53ef\u4ee5\u770b Lambda \u8868\u8fbe\u5f0f\u548c\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u7b14\u8bb0\uff09"),Object(i.b)("li",{parentName:"ul"},"\u4e1a\u52a1\u5c42\u8c03\u7528\u6301\u4e45\u5c42\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u5904\u7406\uff0c\u5e76\u751f\u6210\u6570\u636e\uff0c\u901a\u8fc7 FreeMarker \u6a21\u677f\u5f15\u64ce\u628a\u6570\u636e\u6e32\u67d3\u5230 ftl \u6587\u4ef6\u91cc\uff0c\u6700\u540e\u6363\u9f13\u6210 HTML"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"\u8c03\u7528 Route \u7c7b\u7684 responseWithHeader \u65b9\u6cd5\uff0c\u6309\u7167 HTTP \u7684\u7ea6\u5b9a\uff0c\u586b\u5165\u72b6\u6001\u7801\uff0c\u54cd\u5e94\u5934\uff0c\u6e32\u67d3\u597d\u7684 HTML \u9875\u9762\uff0c\u5e76\u4ee5 byte[] \u7684\u5f62\u5f0f\u8fd4\u56de\u51fa\u53bb\uff0c\u518d\u5916\u5c42 socket \u4f1a\u628a\u5b83\u53d1\u56de\u5ba2\u6237\u7aef")))),Object(i.b)("h2",{id:"\u9875\u9762\u672a\u627e\u5230-404-\u7684\u8def\u7531"},"\u9875\u9762\u672a\u627e\u5230 404 \u7684\u8def\u7531"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"\u5728 Route \u7684 Map \u91cc\u627e\u4e0d\u5230\u7684 Path\uff0c\u5c31\u5e94\u8be5\u89e6\u53d1 404\uff0c\u90a3\u4e48\u6211\u4eec\u7ed9\u8fd9\u79cd\u8bf7\u6c42\u4e00\u4e2a\u7edf\u4e00\u7684\u65b9\u6cd5\u5f15\u7528\uff0c\u6307\u5411\u4e00\u4e2a 404 \u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a 404 \u9875\u9762"),Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},"\u76f4\u63a5\u62ff\u5b57\u7b26\u4e32\u62fc\u4e00\u4e2a HTTP \u62a5\u6587")),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'public static byte[] route404(Request request) {\n    String body = "<html><body><h1>404</h1><br><img src=\'/doge2.gif\'></body></html>";\n    String response = "HTTP/1.1 404 NOT OK\\r\\nContent-Type: text/html;\\r\\n\\r\\n" + body;\n    return response.getBytes(StandardCharsets.UTF_8);\n}\n'))),Object(i.b)("h1",{id:"freemarkertemplate-\u7c7b"},"FreeMarkerTemplate \u7c7b"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"\u7528\u6765\u628a\u540e\u7aef\u6570\u636e\u5207\u5165\u5230 FTL \u6587\u4ef6\u4e2d\u7684"),Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},"\u5176\u5b9e\u5c31\u662f\u6839\u636e FreeMarker \u7684\u8bed\u6cd5\uff0c\u628a\u6709\u8bed\u6cd5\u7684\u4f4d\u7f6e\u66ff\u6362\u6210\u771f\u5b9e\u7684\u540e\u7aef\u6570\u636e"),Object(i.b)("li",{parentName:"ul"},"\u4e3b\u8981\u662f\u544a\u8bc9 FreeMarker\uff0cFtl \u6587\u4ef6\u53bb\u54ea\u4e2a\u8def\u5f84\u627e"),Object(i.b)("li",{parentName:"ul"},"render \u65b9\u6cd5\u5b9e\u73b0\u628a FreeMarker \u8bed\u6cd5\u66ff\u6362\u6210\u771f\u5b9e\u7684\u540e\u7aef\u6570\u636e")),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java",metastring:"{40}","{40}":!0}),'public class FreeMarkerTemplate {\n    static Configuration config;\n    //\n    static {\n        // static \u91cc\u9762\u7684\u4e1c\u897f\u53ea\u4f1a\u88ab\u521d\u59cb\u5316\u4e00\u6b21\n        config = new Configuration(\n                Configuration.VERSION_2_3_28);\n\n        String resource = String.format("%s.class", Utils.class.getSimpleName());\n        Utils.log("resource %s", resource);\n        Utils.log("resource path %s", Utils.class.getResource(""));\n        var res = Utils.class.getResource(resource);\n        if (res != null && res.toString().startsWith("jar:")) {\n            config.setClassForTemplateLoading(Utils.class, "/templates");\n        } else {\n            try {\n                File f = new File("build/resources/main/templates");\n                config.setDirectoryForTemplateLoading(f);\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        config.setDefaultEncoding("utf-8");\n        config.setTemplateExceptionHandler(TemplateExceptionHandler.RETHROW_HANDLER);\n        config.setLogTemplateExceptions(false);\n        config.setWrapUncheckedExceptions(true);\n    }\n\n    public static String render(Object data, String templateFileName) {\n        Template template;\n        try {\n            template = config.getTemplate(templateFileName);\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n        ByteArrayOutputStream result = new ByteArrayOutputStream();\n        Writer writer = new OutputStreamWriter(result);\n        try {\n            template.process(data, writer);\n        } catch (TemplateException | IOException e) {\n            String messsage = String.format("\u6a21\u677f process \u5931\u8d25 <%s> error<%s>", data, e);\n            throw new RuntimeException(messsage, e);\n        }\n        return result.toString();\n    }\n}\n\n'))),Object(i.b)("h1",{id:"response-\u54cd\u5e94"},"Response \u54cd\u5e94"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"\u5230\u8fd9\u91cc\uff0c\u6240\u6709\u7684\u6838\u5fc3\u4ee3\u7801\u5df2\u7ecf\u5b8c\u4e86\uff0c\u4f46\u662f\u6d41\u7a0b\u8fd8\u6ca1\u5b8c\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u770b\u7684\u90fd\u662f\u65e7\u4ee3\u7801\uff0c\u4f46\u662f\u7ee7\u7eed\u8bb2\u89e3\u6d41\u7a0b"),Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},"\u540e\u7aef\u6570\u636e\u5df2\u7ecf\u586b\u5145\u597d\u5e76\u751f\u6210\u4e86 HTML\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u628a\u5b83\u54cd\u5e94\u7ed9\u5ba2\u6237\u7aef")),Object(i.b)("h2",Object(r.a)({parentName:"blockquote"},{id:"\u518d\u770b-routeresponsewithheader"}),"\u518d\u770b Route.responseWithHeader"),Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},"\u6bcf\u4e2a\u5177\u4f53\u7684\u4e1a\u52a1\u65b9\u6cd5\uff0c\u6700\u540e\u5bf9\u543c\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u8fdb\u884c\u76f8\u5e94"),Object(i.b)("li",{parentName:"ul"},"\u7c7b\u4f3c\u4e8e SpringMVC \u6700\u540e Controller \u7684\u8fd4\u56de\u503c",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"\u5bf9\u4e8e\u5355\u4f53\u5f0f\u5e94\u7528\u4e00\u822c\u8d70\u89c6\u56fe\u89e3\u6790\u5668 ModelAndView\uff1b\u5bf9\u4e8e\u524d\u540e\u7aef\u5206\u79bb\u5e94\u7528\u4e00\u822c\u662f\u8fd4\u56de\u4e00\u4e2a JSON\uff0c\u76f4\u63a5\u5199\u5b57\u7b26\u4e32\u6216\u8005 HashMap \u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c",Object(i.b)("inlineCode",{parentName:"li"},"@ResponseBody")," \u6216\u8005 ",Object(i.b)("inlineCode",{parentName:"li"},"@RestController")," \u4f1a\u81ea\u52a8\u5904\u7406\u6210 JSON"))),Object(i.b)("li",{parentName:"ul"},"\u81ea\u5236\u7684 MVC \u662f\u7edf\u4e00\u8c03\u8fd9\u4e2a\u65b9\u6cd5\u6363\u9f13\u4e00\u4e2a HTTP \u62a5\u6587\uff0c\u5916\u5c42\u4f1a\u901a\u8fc7 socket \u628a\u5b83\u6cd5\u56de\u5ba2\u6237\u7aef")),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'public static String responseWithHeader(int code, HashMap<String, String> headerMap, String body) {\n    String header = String.format("HTTP/1.1 %s\\r\\n", code);\n\n    for (String key: headerMap.keySet()) {\n        String value = headerMap.get(key);\n        String item = String.format("%s: %s \\r\\n", key, value);\n        header = header + item;\n    }\n    String response =  String.format("%s\\r\\n%s", header, body);\n    return response;\n}\n')),Object(i.b)("h2",Object(r.a)({parentName:"blockquote"},{id:"\u518d\u770b-serverruninteger-port-\u65b9\u6cd5"}),"\u518d\u770b Server.run(Integer port) \u65b9\u6cd5"),Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},"\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u7684 ",Object(i.b)("inlineCode",{parentName:"li"},"byte[] response")," \u53d8\u91cf\uff0c\u6700\u540e\u63a5\u6536\u9053\u5fb7\u5c31\u662f\u4e0a\u9762 Route.responseWithHeader \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\uff0c\u56e0\u4e3a ",Object(i.b)("inlineCode",{parentName:"li"},"response = responseForPath(r);")," \u5c31\u662f\u5206\u53d1\u8def\u7531\u3001\u5904\u7406\u3001\u5e76\u83b7\u53d6\u540e\u53f0\u54cd\u5e94"),Object(i.b)("li",{parentName:"ul"},"\u53ef\u4ee5\u770b\u5230\u63a5\u4e0b\u6765\u5c31\u4f1a\u901a\u8fc7  ",Object(i.b)("inlineCode",{parentName:"li"},"SocketOperator.socketSendAll(socket, response);")," \u4f7f\u7528 socket \u628a\u6e32\u67d3\u597d\u7684 HTML \u53d1\u51fa\u53bb")),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java",metastring:'title="Server \u7c7b" {28,33,43}',title:'"Server','\u7c7b"':!0,"{28,33,43}":!0}),'public class Server {\n    static ArrayList<Message> messageList = MessageService.load();\n\n    public static void run(Integer port) {\n        // \u76d1\u542c\u8bf7\u6c42\n        // \u83b7\u53d6\u8bf7\u6c42\u6570\u636e\n        // \u53d1\u9001\u54cd\u5e94\u6570\u636e\n        // \u6211\u4eec\u7684\u670d\u52a1\u5668\u4f7f\u7528 9000 \u7aef\u53e3\n        // \u4e0d\u4f7f\u7528 80 \u7684\u539f\u56e0\u662f 1024 \u4ee5\u4e0b\u7684\u7aef\u53e3\u90fd\u8981\u7ba1\u7406\u5458\u6743\u9650\u624d\u80fd\u4f7f\u7528\n        // int port = 9000;\n        Utils.log("\u670d\u52a1\u5668\u542f\u52a8, \u8bbf\u95ee http://localhost:%s", port);\n        try (ServerSocket serverSocket = new ServerSocket(port)) {\n            while (true) {\n                // accept \u65b9\u6cd5\u4f1a\u4e00\u76f4\u505c\u7559\u5728\u8fd9\u91cc\u7b49\u5f85\u8fde\u63a5\n                try (Socket socket = serverSocket.accept()) {\n                    // \u5ba2\u6237\u7aef\u8fde\u63a5\u4e0a\u6765\u4e86\n                    Utils.log("client \u8fde\u63a5\u6210\u529f");\n                    // \u8bfb\u53d6\u5ba2\u6237\u7aef\u8bf7\u6c42\u6570\u636e\n                    String request = SocketOperator.socketReadAll(socket);\n                    byte[] response;\n                    if (request.length() > 0) {\n                        // \u8f93\u51fa\u54cd\u5e94\u7684\u6570\u636e\n                        Utils.log("\u8bf7\u6c42:\\n%s", request);\n                        // \u89e3\u6790 request \u5f97\u5230 path\n                        Request r = new Request(request);\n\n                        // \u6839\u636e path \u6765\u5224\u65ad\u8981\u8fd4\u56de\u4ec0\u4e48\u6570\u636e\n                        response = responseForPath(r);\n                    } else {\n                        response = new byte[1];\n                        Utils.log("\u63a5\u53d7\u5230\u4e86\u4e00\u4e2a\u7a7a\u8bf7\u6c42");\n                    }\n                    SocketOperator.socketSendAll(socket, response);\n                }\n            }\n        } catch (IOException ex) {\n            System.out.println("exception: " + ex.getMessage());\n        }\n    }\n\n    private static byte[] responseForPath(Request reqeust) {\n        HashMap<String, Function<Request, byte[]>> map = Route.routeMapAll();\n        Function<Request, byte[]> function = map.getOrDefault(reqeust.path, Route::route404);\n        byte[] response = function.apply(reqeust);\n        return response;\n    }\n}\n'))),Object(i.b)("br",null),Object(i.b)("h1",{id:"\u670d\u52a1\u5668\u542f\u52a8"},"\u670d\u52a1\u5668\u542f\u52a8"),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},"\u53ea\u8981\u7ed9 ",Object(i.b)("inlineCode",{parentName:"li"},"Server.run(port)")," \u4f20\u4e00\u4e2a\u7aef\u53e3\u53f7\u5c31\u884c\u4e86")),Object(i.b)("pre",{parentName:"blockquote"},Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java",metastring:"{5}","{5}":!0}),'public class Main {\n    public static void main(String[] args) {\n        System.out.println("hello");\n        int port = 9000;\n        Server.run(port);\n    }\n}\n'))))}p.isMDXComponent=!0},574:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),p=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=p(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=p(n),d=r,m=b["".concat(o,".").concat(d)]||b[d]||u[d]||i;return n?a.a.createElement(m,s(s({ref:t},c),{},{components:n})):a.a.createElement(m,s({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);