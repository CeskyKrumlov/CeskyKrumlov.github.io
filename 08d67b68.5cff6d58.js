(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{570:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return O}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r.a.createContext({}),s=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,o=b(e,["components","mdxType","originalType","parentName"]),p=s(n),d=a,O=p["".concat(l,".").concat(d)]||p[d]||u[d]||i;return n?r.a.createElement(O,c(c({ref:t},o),{},{components:n})):r.a.createElement(O,c({ref:t},o))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var o=2;o<i;o++)l[o]=n[o];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},664:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/10-929c625f1032382f1cf530e2fcf938b0.png"},84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return b})),n.d(t,"default",(function(){return s}));var a=n(2),r=n(6),i=(n(0),n(570)),l={id:"160.intersectionOfTwoLinkedLists",title:"160.\u76f8\u4ea4\u94fe\u8868",hide_title:!0},c={unversionedId:"sf/\u94fe\u8868/160.intersectionOfTwoLinkedLists",id:"sf/\u94fe\u8868/160.intersectionOfTwoLinkedLists",isDocsHomePage:!1,title:"160.\u76f8\u4ea4\u94fe\u8868",description:"160.\u76f8\u4ea4\u94fe\u8868",source:"@site/datastructure/sf/\u94fe\u8868/160.\u76f8\u4ea4\u94fe\u8868.md",slug:"/sf/\u94fe\u8868/160.intersectionOfTwoLinkedLists",permalink:"/datastructure/sf/\u94fe\u8868/160.intersectionOfTwoLinkedLists",version:"current",sidebar:"docs2",previous:{title:"2.\u4e24\u6570\u76f8\u52a0",permalink:"/datastructure/sf/\u94fe\u8868/2.addTwoNumbers"},next:{title:"86.\u5206\u9694\u94fe\u8868",permalink:"/datastructure/sf/\u94fe\u8868/86.partitionList"}},b=[{value:"160.\u76f8\u4ea4\u94fe\u8868",id:"160\u76f8\u4ea4\u94fe\u8868",children:[]},{value:"\u54c8\u5e0c\u8868\u6cd5",id:"\u54c8\u5e0c\u8868\u6cd5",children:[]},{value:"\u53cc\u6307\u9488\u6cd5",id:"\u53cc\u6307\u9488\u6cd5",children:[]}],o={rightToc:b};function s(e){var t=e.components,l=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},o,l,{components:t,mdxType:"MDXLayout"}),Object(i.b)("br",null),Object(i.b)("h1",{id:"160\u76f8\u4ea4\u94fe\u8868"},"160.\u76f8\u4ea4\u94fe\u8868"),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"\u7c7b\u4f3c\u9898\u76ee")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("ul",{parentName:"div"},Object(i.b)("li",{parentName:"ul"},"\u9762\u8bd5\u9898 02.07 \u94fe\u8868\u76f8\u4ea4"),Object(i.b)("li",{parentName:"ul"},"\u9762\u8bd5\u9898 52 \u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9")))),Object(i.b)("p",null,"\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u627e\u5230\u4e24\u4e2a\u5355\u94fe\u8868\u76f8\u4ea4\u7684\u8d77\u59cb\u8282\u70b9\u3002"),Object(i.b)("p",null,"\u5982\u4e0b\u9762\u7684\u4e24\u4e2a\u94fe\u8868\uff1a"),Object(i.b)("p",null,"\u5728\u8282\u70b9 c1 \u5f00\u59cb\u76f8\u4ea4\u3002"),Object(i.b)("p",null,"\u793a\u4f8b 1\uff1a"),Object(i.b)("p",null,"\u8f93\u5165\uff1aintersectVal = 8, listA = ","[4,1,8,4,5]",", listB = ","[5,0,1,8,4,5]",", skipA = 2, skipB = 3\n\u8f93\u51fa\uff1aReference of the node with value = 8\n\u8f93\u5165\u89e3\u91ca\uff1a\u76f8\u4ea4\u8282\u70b9\u7684\u503c\u4e3a 8 \uff08\u6ce8\u610f\uff0c\u5982\u679c\u4e24\u4e2a\u94fe\u8868\u76f8\u4ea4\u5219\u4e0d\u80fd\u4e3a 0\uff09\u3002\u4ece\u5404\u81ea\u7684\u8868\u5934\u5f00\u59cb\u7b97\u8d77\uff0c\u94fe\u8868 A \u4e3a ","[4,1,8,4,5]","\uff0c\u94fe\u8868 B \u4e3a ","[5,0,1,8,4,5]","\u3002\u5728 A \u4e2d\uff0c\u76f8\u4ea4\u8282\u70b9\u524d\u6709 2 \u4e2a\u8282\u70b9\uff1b\u5728 B \u4e2d\uff0c\u76f8\u4ea4\u8282\u70b9\u524d\u6709 3 \u4e2a\u8282\u70b9\u3002"),Object(i.b)("p",null,"\u793a\u4f8b 2\uff1a"),Object(i.b)("p",null,"\u8f93\u5165\uff1aintersectVal = 2, listA = ","[0,9,1,2,4]",", listB = ","[3,2,4]",", skipA = 3, skipB = 1\n\u8f93\u51fa\uff1aReference of the node with value = 2\n\u8f93\u5165\u89e3\u91ca\uff1a\u76f8\u4ea4\u8282\u70b9\u7684\u503c\u4e3a 2 \uff08\u6ce8\u610f\uff0c\u5982\u679c\u4e24\u4e2a\u94fe\u8868\u76f8\u4ea4\u5219\u4e0d\u80fd\u4e3a 0\uff09\u3002\u4ece\u5404\u81ea\u7684\u8868\u5934\u5f00\u59cb\u7b97\u8d77\uff0c\u94fe\u8868 A \u4e3a ","[0,9,1,2,4]","\uff0c\u94fe\u8868 B \u4e3a ","[3,2,4]","\u3002\u5728 A \u4e2d\uff0c\u76f8\u4ea4\u8282\u70b9\u524d\u6709 3 \u4e2a\u8282\u70b9\uff1b\u5728 B \u4e2d\uff0c\u76f8\u4ea4\u8282\u70b9\u524d\u6709 1 \u4e2a\u8282\u70b9\u3002"),Object(i.b)("p",null,"\u793a\u4f8b 3\uff1a"),Object(i.b)("p",null,"\u8f93\u5165\uff1aintersectVal = 0, listA = ","[2,6,4]",", listB = ","[1,5]",", skipA = 3, skipB = 2\n\u8f93\u51fa\uff1anull\n\u8f93\u5165\u89e3\u91ca\uff1a\u4ece\u5404\u81ea\u7684\u8868\u5934\u5f00\u59cb\u7b97\u8d77\uff0c\u94fe\u8868 A \u4e3a ","[2,6,4]","\uff0c\u94fe\u8868 B \u4e3a ","[1,5]","\u3002\u7531\u4e8e\u8fd9\u4e24\u4e2a\u94fe\u8868\u4e0d\u76f8\u4ea4\uff0c\u6240\u4ee5 intersectVal \u5fc5\u987b\u4e3a 0\uff0c\u800c skipA \u548c skipB \u53ef\u4ee5\u662f\u4efb\u610f\u503c\u3002\n\u89e3\u91ca\uff1a\u8fd9\u4e24\u4e2a\u94fe\u8868\u4e0d\u76f8\u4ea4\uff0c\u56e0\u6b64\u8fd4\u56de null\u3002"),Object(i.b)("p",null,"\u6ce8\u610f\uff1a"),Object(i.b)("p",null,"\u5982\u679c\u4e24\u4e2a\u94fe\u8868\u6ca1\u6709\u4ea4\u70b9\uff0c\u8fd4\u56de null.\n\u5728\u8fd4\u56de\u7ed3\u679c\u540e\uff0c\u4e24\u4e2a\u94fe\u8868\u4ecd\u987b\u4fdd\u6301\u539f\u6709\u7684\u7ed3\u6784\u3002\n\u53ef\u5047\u5b9a\u6574\u4e2a\u94fe\u8868\u7ed3\u6784\u4e2d\u6ca1\u6709\u5faa\u73af\u3002\n\u7a0b\u5e8f\u5c3d\u91cf\u6ee1\u8db3 O(n) \u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4e14\u4ec5\u7528 O(1) \u5185\u5b58\u3002"),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://leetcode-cn.com/problems/intersection-of-two-linked-lists/"}),"160. Intersection of Two Linked Lists")),Object(i.b)("p",null,"\u96be\u5ea6\u7b80\u53551072"),Object(i.b)("p",null,"Given the heads of two singly linked-lists ",Object(i.b)("inlineCode",{parentName:"p"},"headA")," and ",Object(i.b)("inlineCode",{parentName:"p"},"headB"),", return ",Object(i.b)("em",{parentName:"p"},"the node at which the two lists intersect"),". If the two linked lists have no intersection at all, return ",Object(i.b)("inlineCode",{parentName:"p"},"null"),"."),Object(i.b)("p",null,"For example, the following two linked lists begin to intersect at node ",Object(i.b)("inlineCode",{parentName:"p"},"c1"),":"),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://assets.leetcode.com/uploads/2021/03/05/160_statement.png",alt:"img"}))),Object(i.b)("p",null,"It is ",Object(i.b)("strong",{parentName:"p"},"guaranteed")," that there are no cycles anywhere in the entire linked structure."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Note")," that the linked lists must ",Object(i.b)("strong",{parentName:"p"},"retain their original structure")," after the function returns."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example 1:")),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://assets.leetcode.com/uploads/2021/03/05/160_example_1_1.png",alt:"img"}))),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"Input: intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3\nOutput: Intersected at '8'\nExplanation: The intersected node's value is 8 (note that this must not be 0 if the two lists intersect).\nFrom the head of A, it reads as [4,1,8,4,5]. From the head of B, it reads as [5,6,1,8,4,5]. There are 2 nodes before the intersected node in A; There are 3 nodes before the intersected node in B.\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example 2:")),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://assets.leetcode.com/uploads/2021/03/05/160_example_2.png",alt:"img"}))),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"Input: intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\nOutput: Intersected at '2'\nExplanation: The intersected node's value is 2 (note that this must not be 0 if the two lists intersect).\nFrom the head of A, it reads as [1,9,1,2,4]. From the head of B, it reads as [3,2,4]. There are 3 nodes before the intersected node in A; There are 1 node before the intersected node in B.\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example 3:")),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://assets.leetcode.com/uploads/2021/03/05/160_example_3.png",alt:"img"}))),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"Input: intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\nOutput: No intersection\nExplanation: From the head of A, it reads as [2,6,4]. From the head of B, it reads as [1,5]. Since the two lists do not intersect, intersectVal must be 0, while skipA and skipB can be arbitrary values.\nExplanation: The two lists do not intersect, so return null.\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Constraints:")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The number of nodes of ",Object(i.b)("inlineCode",{parentName:"li"},"listA")," is in the ",Object(i.b)("inlineCode",{parentName:"li"},"m"),"."),Object(i.b)("li",{parentName:"ul"},"The number of nodes of ",Object(i.b)("inlineCode",{parentName:"li"},"listB")," is in the ",Object(i.b)("inlineCode",{parentName:"li"},"n"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"0 <= m, n <= 3 * 104")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"1 <= Node.val <= 105")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"0 <= skipA <= m")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"0 <= skipB <= n")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"intersectVal")," is ",Object(i.b)("inlineCode",{parentName:"li"},"0")," if ",Object(i.b)("inlineCode",{parentName:"li"},"listA")," and ",Object(i.b)("inlineCode",{parentName:"li"},"listB")," do not intersect."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"intersectVal == listA[skipA + 1] == listB[skipB + 1]")," if ",Object(i.b)("inlineCode",{parentName:"li"},"listA")," and ",Object(i.b)("inlineCode",{parentName:"li"},"listB")," intersect.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Follow up:")," Could you write a solution that runs in ",Object(i.b)("inlineCode",{parentName:"p"},"O(n)")," time and use only ",Object(i.b)("inlineCode",{parentName:"p"},"O(1)")," memory?"),Object(i.b)("br",null),Object(i.b)("h1",{id:"\u54c8\u5e0c\u8868\u6cd5"},"\u54c8\u5e0c\u8868\u6cd5"),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},"\u628a A \u94fe\u8868\u7684\u6240\u6709\u8282\u70b9\u7684\u5f15\u7528\u90fd\u5b58\u5165\u4e00\u4e2a HashSet"),Object(i.b)("li",{parentName:"ul"},"\u904d\u5386 B \u94fe\u8868\uff0c\u68c0\u67e5 A \u7684 HashSet \u4e2d\u662f\u5426\u5305\u542b B \u4e2d\u8282\u70b9"))),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"public ListNode getIntersectionNodeByHashSet(ListNode headA, ListNode headB) {\n    if (headA == null || headB == null) return null;\n\n    HashSet<ListNode> ASet = new HashSet<>();\n    HashSet<ListNode> BSet = new HashSet<>();\n\n    while (headA != null) {\n        ASet.add(headA);\n        headA = headA.next;\n    }\n\n    while (headB != null) {\n        if (ASet.contains(headB)) return headB;\n        headB = headB.next;\n    }\n\n    return null;\n}\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"\u65f6\u95f4\u590d\u6742\u5ea6 O(M + N)"),Object(i.b)("li",{parentName:"ul"},"\u7a7a\u95f4\u590d\u6742\u5ea6 O(n)")),Object(i.b)("br",null),Object(i.b)("h1",{id:"\u53cc\u6307\u9488\u6cd5"},"\u53cc\u6307\u9488\u6cd5"),Object(i.b)("blockquote",null,Object(i.b)("ul",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ul"},"\u4e24\u4e2a\u94fe\u8868\u5206\u522b\u62fc\u63a5\u5f7c\u6b64\uff0c\u5f62\u6210 2 \u4e2a\u65b0\u94fe\u8868\uff0c\u4e24\u4e2a\u65b0\u94fe\u8868\u7684\u5c3e\u90e8\u662f\u76f8\u540c\u7684"),Object(i.b)("li",{parentName:"ul"},"\u5373\u53ef\u4e24\u4e2a\u6307\u9488\u540c\u6b65\u904d\u5386\u94fe\u8868\uff0c\u6bd4\u8f83\u5806\u5730\u5740\u627e\u51fa\u76f8\u4ea4\u8282\u70b9"),Object(i.b)("li",{parentName:"ul"},"\u6ce8\u610f\u4e24\u4e2a\u94fe\u8868\u6ca1\u6709\u76f8\u4ea4\u8282\u70b9\u7684\u60c5\u51b5"))),Object(i.b)("p",null,Object(i.b)("img",{alt:"image-20210403113540839",src:n(664).default})),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"public ListNode getIntersectionNode(ListNode headA, ListNode headB) {\n    if (headA == null || headB == null) return null;\n\n    ListNode currentA = headA;\n    ListNode currentB = headB;\n\n    while (currentA != currentB) { // \u6bd4\u8f83\u5806\u5730\u5740\n        currentA = currentA == null ? headB : currentA.next;\n        currentB = currentB == null ? headA : currentB.next;\n    }\n\n    return currentA;\n}\n")))}s.isMDXComponent=!0}}]);