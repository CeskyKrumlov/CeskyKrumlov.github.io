(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{347:function(e,n,t){"use strict";t.d(n,"a",(function(){return l})),t.d(n,"b",(function(){return m}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=a.a.createContext({}),u=function(e){var n=a.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},l=function(e){var n=u(e.components);return a.a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},b=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),l=u(t),b=r,m=l["".concat(i,".").concat(b)]||l[b]||d[b]||o;return t?a.a.createElement(m,p(p({ref:n},s),{},{components:t})):a.a.createElement(m,p({ref:n},s))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=b;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var s=2;s<o;s++)i[s]=t[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},400:function(e,n,t){"use strict";t.r(n),n.default=t.p+"assets/images/21-ffc230c2567f5e494d6bf9a1211c118d.gif"},79:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return p})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return u}));var r=t(2),a=t(6),o=(t(0),t(347)),i={id:"14.vuecliSpringboot",title:"\u524d\u540e\u7aef\u5206\u79bb\u6848\u4f8b\u2014\u2014\u540e\u7aef\u9879\u76ee",hide_title:!0},p={unversionedId:"front/vue/14.vuecliSpringboot",id:"front/vue/14.vuecliSpringboot",isDocsHomePage:!1,title:"\u524d\u540e\u7aef\u5206\u79bb\u6848\u4f8b\u2014\u2014\u540e\u7aef\u9879\u76ee",description:"14 Vue CLI\u7ed3\u5408SpringBoot",source:"@site/docs/front/vue/14.Vue CLI\u540e\u7aef.md",slug:"/front/vue/14.vuecliSpringboot",permalink:"/docs/front/vue/14.vuecliSpringboot",version:"current",sidebar:"someSidebar",previous:{title:"Vue CLI \u811a\u624b\u67b6",permalink:"/docs/front/vue/13.vuecli"},next:{title:"\u524d\u540e\u7aef\u5206\u79bb\u6848\u4f8b\u2014\u2014\u524d\u7aef\u9879\u76ee",permalink:"/docs/front/vue/14.vuecliFront"}},c=[{value:"14 Vue CLI\u7ed3\u5408SpringBoot",id:"14-vue-cli\u7ed3\u5408springboot",children:[{value:"14.2 \u540e\u7aefSpringBoot\u9879\u76ee",id:"142-\u540e\u7aefspringboot\u9879\u76ee",children:[{value:"14.2.1 \u73af\u5883\u914d\u7f6e",id:"1421-\u73af\u5883\u914d\u7f6e",children:[]},{value:"14.2.2 \u540e\u7aef\u7a0b\u5e8f\u5f00\u53d1",id:"1422-\u540e\u7aef\u7a0b\u5e8f\u5f00\u53d1",children:[]}]}]}],s={rightToc:c};function u(e){var n=e.components,i=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,i,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"14-vue-cli\u7ed3\u5408springboot"},"14 Vue CLI\u7ed3\u5408SpringBoot"),Object(o.b)("h2",{id:"142-\u540e\u7aefspringboot\u9879\u76ee"},"14.2 \u540e\u7aefSpringBoot\u9879\u76ee"),Object(o.b)("h3",{id:"1421-\u73af\u5883\u914d\u7f6e"},"14.2.1 \u73af\u5883\u914d\u7f6e"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\u6574\u5408Mybatis\u3001Lombok\u3001MySQL")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"pom.xml")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-xml"}),'<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.2.7.RELEASE</version>\n        <relativePath/> \x3c!-- lookup parent from repository --\x3e\n    </parent>\n    <groupId>com.bsx</groupId>\n    <artifactId>vuecli</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>vuecli</name>\n    <description>Demo project for Spring Boot</description>\n\n    <properties>\n        <java.version>1.8</java.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-jdbc</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.mybatis.spring.boot</groupId>\n            <artifactId>mybatis-spring-boot-starter</artifactId>\n            <version>2.1.2</version>\n        </dependency>\n\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <version>5.1.47</version>\n            <scope>runtime</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n            <exclusions>\n                <exclusion>\n                    <groupId>org.junit.vintage</groupId>\n                    <artifactId>junit-vintage-engine</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>druid</artifactId>\n            <version>1.1.21</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n')),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"application.yaml")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"spring:\n  datasource:\n    username: root\n    password: root\n    #?serverTimezone=UTC\u89e3\u51b3\u65f6\u533a\u7684\u62a5\u9519\n    url: jdbc:mysql://localhost:3306/test?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8\n    driver-class-name: com.mysql.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource # \u914d\u7f6e\u4f7f\u7528Druid\u6570\u636e\u6e90\n\n    #Spring Boot \u9ed8\u8ba4\u662f\u4e0d\u6ce8\u5165\u8fd9\u4e9b\u5c5e\u6027\u503c\u7684\uff0c\u9700\u8981\u81ea\u5df1\u7ed1\u5b9a\n    #druid \u6570\u636e\u6e90\u4e13\u6709\u914d\u7f6e\n    initialSize: 5\n    minIdle: 5\n    maxActive: 20\n    maxWait: 60000\n    timeBetweenEvictionRunsMillis: 60000\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #\u914d\u7f6e\u76d1\u63a7\u7edf\u8ba1\u62e6\u622a\u7684filters\uff0cstat:\u76d1\u63a7\u7edf\u8ba1\u3001log4j\uff1a\u65e5\u5fd7\u8bb0\u5f55\u3001wall\uff1a\u9632\u5fa1sql\u6ce8\u5165\n    #\u5982\u679c\u5141\u8bb8\u65f6\u62a5\u9519  java.lang.ClassNotFoundException: org.apache.log4j.Priority\n    #\u5219\u5bfc\u5165 log4j \u4f9d\u8d56\u5373\u53ef\uff0cMaven \u5730\u5740\uff1ahttps://mvnrepository.com/artifact/log4j/log4j\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\nserver:\n  port: 8081\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"}," ",Object(o.b)("strong",{parentName:"p"},"\u6570\u636e\u5e93"))),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"\u5efavueuser\u8868")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-sql"}),"CREATE table vueuser (\n    id VARCHAR(40) PRIMARY KEY,\n    name VARCHAR(40),\n    age int(3),\n    bir TIMESTAMP\n)ENGINE=INNODB DEFAULT CHARSET=utf8;\n")),Object(o.b)("h3",{id:"1422-\u540e\u7aef\u7a0b\u5e8f\u5f00\u53d1"},"14.2.2 \u540e\u7aef\u7a0b\u5e8f\u5f00\u53d1"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"pojo"))),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'@Data\n@AllArgsConstructor\n@NoArgsConstructor\n@ToString\n@Accessors(chain = true)\npublic class User {\n    private String id;\n    private String name;\n    private Integer age;\n    @JsonFormat(pattern = "yyyy-MM-dd", timezone = "GMT+8")\n    private Date bir;\n}\n')),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"mapper")),Object(o.b)("p",{parentName:"blockquote"},"\u6839\u636e\u4e4b\u524dRap2\u4e0a\u5b9a\u4e49\u7684\u63a5\u53e3\u5199")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"@Mapper\n@Repository\npublic interface UserMapper {\n\n    List<User> findAll();\n\n    void add(User user);\n\n    void delete(String id);\n\n    User findOne(String id);\n\n    void update(User user);\n}\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"mapper.xml"))),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-xml"}),'<?xml version="1.0" encoding="UTF-8" ?>\n<!DOCTYPE mapper\n        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"\n        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">\n\n<mapper namespace="com.bsx.vuecli.mapper.UserMapper">\n    <select id="findAll" resultType="com.bsx.vuecli.pojo.User">\n        select * from vueuser\n    </select>\n\n    <select id="findOne" resultType="com.bsx.vuecli.pojo.User">\n        select * from vueuser where id = #{id}\n    </select>\n\n    <insert id="add" parameterType="com.bsx.vuecli.pojo.User">\n        insert into vueuser values (#{id}, #{name}, #{age}, #{bir})\n    </insert>\n\n    <update id="update" parameterType="com.bsx.vuecli.pojo.User">\n        update vueuser set name = #{name}, age = #{age}, bir = #{bir} where id = #{id}\n    </update>\n\n    <delete id="delete">\n        delete from vueuser where id = #{id}\n    </delete>\n</mapper>\n')),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"service"))),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"public interface UserService {\n    List<User> findAll();\n\n    void add(User user);\n\n    void delete(String id);\n\n    User findOne(String id);\n\n    void update(User user);\n}\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"serviceImpl"))),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'@Service\n@Transactional\npublic class UserServiceImpl implements UserService{\n\n    @Autowired\n    private UserMapper userMapper;\n\n    @Override\n    public List<User> findAll() {\n        return userMapper.findAll();\n    }\n\n    @Override\n    public void add(User user) {\n        userMapper.add(user);\n    }\n\n    @Override\n    public void delete(String id) {\n        user.setId(UUID.randomUUID()+"");\n        userMapper.delete(id);\n    }\n\n    @Override\n    public User findOne(String id) {\n        return userMapper.findOne(id);\n    }\n\n    @Override\n    public void update(User user) {\n        userMapper.update(user);\n    }\n}\n')),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"controller")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'package com.bsx.vuecli.controller;\n\nimport com.bsx.vuecli.pojo.User;\nimport com.bsx.vuecli.service.UserService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@RestController\n@CrossOrigin\npublic class UserController {\n\n    @Autowired\n    private UserService userService;\n\n    @GetMapping("/user/findAll")\n    public Map<String, Object> findAll(Integer page, Integer rows) {\n        Map<String, Object> map = new HashMap<>();\n        List<User> results = userService.findAll();\n\n        map.put("total", 10);\n        map.put("totalPage", 1);\n        map.put("page", page);\n        map.put("results", results);\n\n        return map;\n    }\n\n    @PostMapping("/user/add")\n    public Map<String, Object> add(@RequestBody User user) {\n        System.out.println(user);\n        Map<String, Object> map = new HashMap<>();\n        try {\n            userService.add(user);\n            map.put("success", true);\n            map.put("msg", "\u6dfb\u52a0\u6210\u529f");\n        } catch (Exception e) {\n            map.put("success", false);\n            map.put("msg", "\u6dfb\u52a0\u5931\u8d25");\n            e.printStackTrace();\n        }\n        return map;\n    }\n\n    @GetMapping("/user/delete")\n    public Map<String, Object> delete(String id) {\n        Map<String, Object> map = new HashMap<>();\n        try {\n            userService.delete(id);\n            map.put("success", true);\n            map.put("msg", "\u5220\u9664\u6210\u529f");\n        } catch (Exception e) {\n            map.put("success", false);\n            map.put("msg", "\u5220\u9664\u5931\u8d25");\n            e.printStackTrace();\n        }\n        return map;\n    }\n\n    @GetMapping("/user/findOne")\n    public Map<String, Object> findOne(String id) {\n        Map<String, Object> map = new HashMap<>();\n        User findOne = null;\n        try {\n            findOne = userService.findOne(id);\n            map.put("success", true);\n            map.put("msg", "\u67e5\u8be2\u6210\u529f");\n        } catch (Exception e) {\n            map.put("success", false);\n            map.put("msg", "\u67e5\u8be2\u5931\u8d25");\n            e.printStackTrace();\n        } finally {\n            map.put("user", findOne);\n        }\n        return map;\n    }\n\n    @PostMapping("/user/update")\n    public Map<String, Object> update(@RequestBody User user) {\n        System.out.println(user);\n        Map<String,Object> map = new HashMap<>();\n        try {\n            userService.update(user);\n            map.put("success", true);\n            map.put("msg","\u4fee\u6539\u6210\u529f");\n        } catch (Exception e) {\n            map.put("success", false);\n            map.put("msg","\u4fee\u6539\u5931\u8d25");\n            e.printStackTrace();\n        }\n        return map;\n    }\n}\n')),Object(o.b)("img",{src:t(400).default,style:{zoom:"50%"}}))}u.isMDXComponent=!0}}]);