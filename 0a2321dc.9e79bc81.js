(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{331:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return j}));var a=n(0),l=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=l.a.createContext({}),p=function(e){var t=l.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):b(b({},t),e)),n},s=function(e){var t=p(e.components);return l.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},u=l.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),s=p(n),u=a,j=s["".concat(o,".").concat(u)]||s[u]||m[u]||r;return n?l.a.createElement(j,b(b({ref:t},c),{},{components:n})):l.a.createElement(j,b({ref:t},c))}));function j(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=u;var b={};for(var i in t)hasOwnProperty.call(t,i)&&(b[i]=t[i]);b.originalType=e,b.mdxType="string"==typeof e?e:a,o[1]=b;for(var c=2;c<r;c++)o[c]=n[c];return l.a.createElement.apply(null,o)}return l.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},376:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/1-163e5b3dd14dd09efd0ec3d523f4b027.png"},69:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return b})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return p}));var a=n(2),l=n(6),r=(n(0),n(331)),o={id:"1.collections",title:"\u96c6\u5408",hide_title:!0},b={unversionedId:"javase/1.collections",id:"javase/1.collections",isDocsHomePage:!1,title:"\u96c6\u5408",description:"1. \u96c6\u5408",source:"@site/docs/javase/1.\u96c6\u5408.md",permalink:"/docs/javase/1.collections",sidebar:"someSidebar",previous:{title:"\u5b9e\u7528\u5de5\u5177\u8f6f\u4ef6",permalink:"/docs/toolSoftware"},next:{title:"HashMap\u8be6\u89e3",permalink:"/docs/javase/1.hashmap"}},i=[{value:"1. \u96c6\u5408",id:"1-\u96c6\u5408",children:[]},{value:"1.1 Java\u96c6\u5408\u7684\u7ec4\u7ec7\u7ed3\u6784",id:"11-java\u96c6\u5408\u7684\u7ec4\u7ec7\u7ed3\u6784",children:[{value:"1.2 Collection\u63a5\u53e3",id:"12-collection\u63a5\u53e3",children:[]},{value:"1.3 List\u63a5\u53e3",id:"13-list\u63a5\u53e3",children:[]},{value:"1.4 Set\u63a5\u53e3",id:"14-set\u63a5\u53e3",children:[{value:"1.4.1 HashSet\u2014\u2014HashMap\u5b9e\u73b0\uff0c\u65e0\u5e8f",id:"141-hashsethashmap\u5b9e\u73b0\uff0c\u65e0\u5e8f",children:[]},{value:"1.4.2 LinkedHashSet\u2014\u2014\u7ee7\u627fHashSet\u3001HashMap\u5b9e\u73b0\u6570\u636e\u5b58\u50a8\u3001\u53cc\u5411\u94fe\u8868\u8bb0\u5f55\u987a\u5e8f",id:"142-linkedhashset\u7ee7\u627fhashset\u3001hashmap\u5b9e\u73b0\u6570\u636e\u5b58\u50a8\u3001\u53cc\u5411\u94fe\u8868\u8bb0\u5f55\u987a\u5e8f",children:[]},{value:"1.4.1 TreeSet\u2014\u2014\u4e8c\u53c9\u6811\u5b9e\u73b0",id:"141-treeset\u4e8c\u53c9\u6811\u5b9e\u73b0",children:[]}]},{value:"1.5 Map\u63a5\u53e3",id:"15-map\u63a5\u53e3",children:[{value:"1.5.1 Properties\u7c7b",id:"151-properties\u7c7b",children:[]},{value:"1.5.2 TreeMap\u7c7b\u2014\u2014\u57fa\u4e8e\u4e8c\u53c9\u6811",id:"152-treemap\u7c7b\u57fa\u4e8e\u4e8c\u53c9\u6811",children:[]},{value:"1.5.3 LinkedHashMap\u7c7b",id:"153-linkedhashmap\u7c7b",children:[]},{value:"1.5.4 HashMap\u7c7b",id:"154-hashmap\u7c7b",children:[]},{value:"1.5.5 HashTable\u7c7b",id:"155-hashtable\u7c7b",children:[]}]},{value:"1.6 Iterator",id:"16-iterator",children:[]},{value:"1.7 Collections\u4e0eArrays\u5de5\u5177\u7c7b",id:"17-collections\u4e0earrays\u5de5\u5177\u7c7b",children:[{value:"1.7.1 Collections\u5de5\u5177\u7c7b",id:"171-collections\u5de5\u5177\u7c7b",children:[]},{value:"1.7.2 Arrays\u5de5\u5177\u7c7b",id:"172-arrays\u5de5\u5177\u7c7b",children:[]}]},{value:"1.8 Comparator\u4e0eComparable\u6392\u5e8f\u63a5\u53e3",id:"18-comparator\u4e0ecomparable\u6392\u5e8f\u63a5\u53e3",children:[{value:"1.8.1 Comparator",id:"181-comparator",children:[]},{value:"1.8.2 Comparable",id:"182-comparable",children:[]}]}]}],c={rightToc:i};function p(e){var t=e.components,o=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},c,o,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"1-\u96c6\u5408"},"1. \u96c6\u5408"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"\u4e00\u65b9\u9762\uff0c\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u5bf9\u4e8b\u52a1\u7684\u4f53\u73b0\u90fd\u662f\u4ee5\u5bf9\u8c61\u7684\u5f62\u5f0f\uff0c\u4e3a\u4e86\u65b9\u4fbf\u591a\u4e2a\u5bf9\u8c61\u7684\u64cd\u4f5c\uff0c\u5c31\u8981\u5bf9\u5bf9\u8c61\u8fdb\u884c\u5b58\u50a8\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u4f7f\u7528Array\u5b58\u50a8\u5bf9\u8c61\u5177\u6709\u4e00\u4e9b\u5f0a\u7aef\uff0c\u800cJava\u96c6\u5408\u5c31\u50cf\u4e00\u79cd\u5bb9\u5668\uff0c\u53ef\u4ee5\u52a8\u6001\u7684\u628a\u591a\u4e2a",Object(r.b)("strong",{parentName:"p"},"\u5bf9\u8c61\u7684\u5f15\u7528"),"\u5b58\u5165\u96c6\u5408\u4e2d")),Object(r.b)("p",null,"Java\u96c6\u5408\u7c7b\u53ef\u4ee5\u7528\u4e8e\u5b58\u50a8\u6570\u91cf\u4e0d\u7b49\u7684\u591a\u4e2a",Object(r.b)("strong",{parentName:"p"},"\u5bf9\u8c61"),"\uff0c\u8fd8\u53ef\u7528\u4e8e\u4fdd\u5b58\u5177\u6709\u6620\u5c04\u5173\u7cfb\u7684\u5173\u8054\u6570\u7ec4"),Object(r.b)("h1",{id:"11-java\u96c6\u5408\u7684\u7ec4\u7ec7\u7ed3\u6784"},"1.1 Java\u96c6\u5408\u7684\u7ec4\u7ec7\u7ed3\u6784"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Java\u96c6\u5408\u7684\u7ec4\u7ec7\u7ed3\u6784")),Object(r.b)("p",null,Object(r.b)("img",{alt:"image-20200508103212548",src:n(376).default})),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"\u96c6\u5408\u5de5\u5177\u7c7b")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Collections")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Arrays"))),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"\u6392\u5e8f\u63a5\u53e3")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Comparable")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Comparator"))),Object(r.b)("h2",{id:"12-collection\u63a5\u53e3"},"1.2 Collection\u63a5\u53e3"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"\u4e3b\u8981API:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"size()"),"\u8fd4\u56de\u96c6\u5408\u957f\u5ea6")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"add(Object object)")," \u6dfb\u52a0  \u8fd4\u56deboolean")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"addAll(Collection collection)")," \u628a\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20\u6dfb\u52a0\u5230\u53e6\u4e00\u4e2a\u96c6\u5408\u91cc")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"isEmpty()")," \u8fd4\u56deboolea\u662f\u5426\u4e3a\u7a7a")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"clear()")," \u6e05\u7a7a\u96c6\u5408")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"contains(Object obj)"),"   \u96c6\u5408\u662f\u5426\u5305\u542b\u67d0\u5bf9\u8c61")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"containsALL(Collection coll)")," \u662f\u5426\u5305\u542b\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"retainAll(Collection coll)"),"  \u4fdd\u7559\u4e24\u4e2a\u96c6\u5408\u5171\u540c\u7684\u5143\u7d20\uff0c\u4ea4\u96c6")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"remove(Object obj)"),"  \u79fb\u9664\u4e00\u4e2a\u5143\u7d20")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"equals()"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"hashcode()"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"toArray()")," \u5c06\u96c6\u5408\u8f6c\u5316\u4e3a\u6570\u7ec4")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"iterator()")," \u8fd4\u56deIterator\u63a5\u53e3\u5b9e\u73b0\u7c7b\u7684\u5bf9\u8c61\uff0c\u904d\u5386\u96c6\u5408\u5bf9\u8c61"))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'public class TestCollection {\n\n    @Test\n    public void testCollcetion1() {\n        //\u56e0\u4e3aCollection\u662f\u63a5\u53e3\uff0c\u6240\u4ee5\u7528List\u63a5\u53e3\u4e0b\u7684\u5b9e\u73b0\u7c7b ArrayList\u6765\u521b\u5efa\u5bf9\u8c61\n        Collection collection = new ArrayList();\n\n        //1.size()\u8fd4\u56de\u96c6\u5408\u957f\u5ea6\n        System.out.println(collection.size());\n\n        //2.add(Object object)\u6dfb\u52a0  \u8fd4\u56deboolean\n        collection.add(123);\n        collection.add("AA");\n        collection.add(new Date());\n        collection.add("BB");\n\n        //3.addAll(Collection collection) \u628a\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20\u6dfb\u52a0\u5230\u53e6\u4e00\u4e2a\u96c6\u5408\u91cc\n        //Arrays\u6570\u7ec4\u8f6c\u96c6\u5408\n        Collection collection2 = Arrays.asList(1, 2, 3);\n        collection.addAll(collection2);\n        System.out.println(collection.size());\n\n        System.out.println(collection);\n\n        //4.isEmpty() \u8fd4\u56deboolea\u662f\u5426\u4e3a\u7a7a\n        System.out.println(collection.isEmpty());\n\n        //5.clear() \u6e05\u7a7a\u96c6\u5408\n        collection.clear();\n        System.out.println(collection.isEmpty());\n    }\n\n    @Test\n    public void testCollection2() {\n        Collection collection = new ArrayList();\n        collection.add(123);\n        collection.add("AA");\n        collection.add(new Date());\n        collection.add("BB");\n        collection.add(new Person("\u73ed", 18));\n\n        //6.contains(Object obj)\n        //\u6839\u636e\u5143\u7d20\u6240\u5728\u7c7b\u7684equals\u65b9\u6cd5\uff0c\u91cd\u5199\uff0c\u5224\u65ad\u6210\u5458\u53d8\u91cf\u7684\u503c\u800c\u4e0d\u662f\u5224\u65ad\u5730\u5740\u503c\n        boolean flag = collection.contains(new Person("\u73ed", 18));\n        System.out.println(flag);\n\n        //7.containsALL(Collection coll) \u662f\u5426\u5305\u542b\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20\n        Collection collection2 = new ArrayList();\n        collection2.add(123);\n        collection2.add(new String("AA"));\n        boolean flag2 = collection.containsAll(collection2);\n        System.out.println(flag2);\n\n        //8 retainAll(Collection coll)  \u4fdd\u7559\u4e24\u4e2a\u96c6\u5408\u5171\u540c\u7684\u5143\u7d20\uff0c\u4ea4\u96c6\n        //\u7ed3\u679c\u8fd4\u56de\u5230\u8c03\u7528\u96c6\u5408\n        collection.retainAll(collection2);\n        System.out.println(collection);    // [123, AA]\n\n        //9.remove(Object obj)\n        boolean flag4 = collection.remove("bb");\n        System.out.println(flag4);\n\n        //10.removeAll(Collection coll)\n        boolean flag5 = collection.retainAll(collection2);\n\n        //11.equals\n\n        //12.hashcode() \u8ba1\u7b97\u96c6\u5408\u4e2d\u7684Hash\u503c\n        System.out.println(collection.hashCode());\n\n        //13.toArray \u5c06\u96c6\u5408\u8f6c\u5316\u4e3a\u6570\u7ec4\n        Object[] obj = collection.toArray();\n        for(Object o:obj){\n            System.out.println(o);\n        }\n\n        //14.iterator() \u8fd4\u56deIterator\u63a5\u53e3\u5b9e\u73b0\u7c7b\u7684\u5bf9\u8c61\uff0c\u904d\u5386\u96c6\u5408\u5bf9\u8c61\n        Iterator iterator = collection.iterator();\n        while(iterator.hasNext()){\n            System.out.println(iterator.next());\n        }\n    }\n}\n')),Object(r.b)("h2",{id:"13-list\u63a5\u53e3"},"1.3 List\u63a5\u53e3"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("inlineCode",{parentName:"p"},"List"),"\u4e5f\u662f\u63a5\u53e3\uff0c\u7ee7\u627f\u81ea",Object(r.b)("inlineCode",{parentName:"p"},"Collection"),"\u63a5\u53e3\uff0c",Object(r.b)("inlineCode",{parentName:"p"},"Collection"),"\u768415\u4e2a\u65b9\u6cd5\u7686\u53ef\u7528"),Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},"\u5143\u7d20\u6709\u5e8f\u53ef\u91cd\u590d"))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"ArrayList"),"(\u52a8\u6001\u6570\u7ec4)\uff1a",Object(r.b)("inlineCode",{parentName:"li"},"List"),"\u7684\u4e3b\u8981\u5b9e\u73b0\u7c7b ",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"\u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0\uff0c\u589e\u5220\u6162\uff0c\u67e5\u8be2\u5feb\uff0c\u7ebf\u7a0b\u4e0d\u5b89\u5168")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"LinkedList"),"(\u94fe\u8868)\uff1a\u5bf9\u4e8e\u9891\u7e41\u7684\u63d2\u5165\u548c\u5220\u9664\u5efa\u8bae\u9009\u62e9",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"\u57fa\u4e8e\u53cc\u5411\u94fe\u8868\u5b9e\u73b0\uff0c\u589e\u5220\u5feb\uff0c\u67e5\u8be2\u6162\uff0c\u7ebf\u7a0b\u4e0d\u5b89\u5168")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Vector"),": \u53e4\u8001\u7684\u5b9e\u73b0\u7c7b\uff0c\u7ebf\u7a0b\u5b89\u5168",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"\u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0\uff0c\u589e\u5220\u6162\uff0c\u67e5\u8be2\u5feb\uff0c\u7ebf\u7a0b\u5b89\u5168")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"\u4e3a\u4e86\u7ebf\u7a0b\u5b89\u5168\u635f\u5931\u4e86\u6027\u80fd\uff0c\u603b\u4f53\u4e0a\u6027\u80fd\u4e0d\u5982ArrayList"))))),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("inlineCode",{parentName:"p"},"List"),"\u96c6\u5408\u91cc\u6dfb\u52a0\u4e86\u4e00\u4e9b\u6839\u636e\u7d22\u5f15\u6765\u64cd\u4f5c\u96c6\u5408\u5143\u7d20\u7684\u65b9\u6cd5")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"void add(int index,Object ele)"),"   \u5728\u6307\u5b9a\u7684\u4f4d\u7f6e\u6dfb\u52a0")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"boolean addALL(int index,Collection eles)"),"  \u5728\u6307\u5b9a\u4f4d\u7f6e\u52a0\u4e0a\u597d\u591a\u5143\u7d20\uff0c\u4ee5\u96c6\u5408\u7684\u65b9\u5f0f\u4f20\u5165")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"Object get(int index)"),"  \u6839\u636e\u4e0b\u6807\u83b7\u5f97\u4e00\u4e2a\u5143\u7d20")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"int indexOf(Object obj)"),"  \u83b7\u5f97\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u6807"))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"int lastIndexOf(Object obj)"),"  \u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u6807"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Object remove(int index)"),"             \u5220\u9664\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Object set(int index,Object ele)"),"      \u8bbe\u5b9a\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\u53d8\u6210\u4e00\u4e2a\u65b0\u503c"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"List subList(int fromIndex,int toIndex)"),"   \u8fd4\u56de\u4ecefromIndex\u5230 toIndex\u4e4b\u95f4\u7684\u5b50list !\u5de6\u95ed\u53f3\u5f00")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("inlineCode",{parentName:"p"},"List"),"\u5e38\u7528\u65b9\u6cd5")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"\u589e    ",Object(r.b)("inlineCode",{parentName:"li"},"add"),"  or \u63d2\u5165 ",Object(r.b)("inlineCode",{parentName:"li"},"add(index,Object obj)")),Object(r.b)("li",{parentName:"ul"},"\u5220    ",Object(r.b)("inlineCode",{parentName:"li"},"remove"),"  \u5143\u7d20/\u4e0b\u6807"),Object(r.b)("li",{parentName:"ul"},"\u6539    ",Object(r.b)("inlineCode",{parentName:"li"},"set")),Object(r.b)("li",{parentName:"ul"},"\u67e5    ",Object(r.b)("inlineCode",{parentName:"li"},"get(index)")," ")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'@Test\npublic void testList1() {\n    //List\u662f\u63a5\u53e3 \uff0c ArrayList\u662f\u5b9e\u73b0\u7c7b\n    List list = new ArrayList();\n    list.add(123);   //\u7528\u7684\u662fCollection\u7684\u65b9\u6cd5\n    list.add(456);\n    list.add(new String("AA"));\n    list.add(new String("GG"));\n\n    //\u6253\u5370\u7ed3\u679c\u662f\u6709\u5e8f\u7684\n    System.out.println(list);\n\n    list.add(0, new String("first"));\n    System.out.println(list);\n    Object obj = list.get(1);\n    System.out.println(obj);\n\n    //subList\n    List list1 = new ArrayList();\n    list1.add(0);\n    list1.add(1);\n    list1.add(2);\n    list1.add(3);\n    List list1Sub = list1.subList(0, 3);\n    System.out.println(list1);\n    System.out.println(list1Sub);\n\n    List vectorList = new Vector();\n    vectorList.add(123);\n    System.out.println(vectorList);\n}\n')),Object(r.b)("h2",{id:"14-set\u63a5\u53e3"},"1.4 Set\u63a5\u53e3"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("inlineCode",{parentName:"p"},"Set")),Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},"\u65e0\u5e8f\u4e0d\u53ef\u91cd\u590d"))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{})," `HashSet`(\u4e3b\u8981\u5b9e\u73b0\u7c7b)\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{})," `LinkedHashSet`\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{})," `TreeSet`\n")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"1.\u65e0\u5e8f != \u968f\u673a   \u771f\u6b63\u7684\u65e0\u5e8f\u6027\u6307\u7684\u662f\u5143\u7d20\u5728\u9876\u5c42\u5b58\u50a8\u7684\u4f4d\u7f6e\u662f\u65e0\u5e8f\u7684\uff0c\u4f4d\u7f6e\u6839\u636e\u54c8\u5e0c\u503c\u6765\u786e\u5b9a")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"2.\u4e0d\u53ef\u91cd\u590d\u6027\uff1a \u5f53\u5411Set\u4e2d\u63d0\u5a1c\u4f73\u76f8\u540c\u7684\u5143\u7d20\u65f6\uff0c\u540e\u9762\u7684\u8fd9\u4e2a\u4e0d\u80fd\u6dfb\u52a0\u8fdb\u53bb")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Set\u4e2d\u7684\u5143\u7d20\u662f\u5982\u4f55\u5b58\u50a8\u7684\u5462?")),Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"\u4f7f\u7528\u4e86\u54c8\u5e0c\u7b97\u6cd5\uff0c\u5148\u7b97Hash\u503c\uff0c\u4e0d\u91cd\u590d\u5c31\u76f4\u63a5\u5b58\uff0c\u91cd\u590d\u4e86\u5c31\u548c\u539f\u503c\u5bf9\u6bd4\u3002")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"\u5728Hash\u503c\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u4e0d\u5bf9\u503c\u8fdb\u884c\u5bf9\u6bd4\uff0c\u4e5f\u53ef\u4ee5\u9ed8\u8ba4\u4e24\u4e2a\u503c\u4e0d\u540c")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"\u800cHash\u503c\u662f\u5728\u503c\u672c\u5730\u8ba1\u7b97\u7684\u4e0d\u9700\u8981\u7275\u626f\u5176\u4ed6\u503c\uff0c\u56e0\u6b64\u6548\u7387\u9ad8"),Object(r.b)("p",{parentName:"li"},"1.\u8c03\u7528",Object(r.b)("inlineCode",{parentName:"p"},"HashCode() "),"\u8ba1\u7b97\u54c8\u5e0c\u503c\uff0c\u51b3\u5b9a\u4e86\u5bf9\u8c61\u5728Set\u4e2d\u7684\u5b58\u50a8\u4f4d\u7f6e"),Object(r.b)("p",{parentName:"li"},"2.\u82e5Hash\u503c\u5bf9\u5e94\u5185\u5b58\u5df2\u6709\u503c\uff0c\u5219\u8c03\u7528equals\u8fdb\u884c\u5bf9\u6bd4\uff0c\u5982\u679c\u76f8\u540c\u5219\u540e\u4e00\u4e2a\u5bf9\u8c61\u4e0d\u80fd\u518d\u6dfb\u52a0\u8fdb\u6765"),Object(r.b)("p",{parentName:"li"},"3.\u5982\u679c\u503c\u4e0d\u76f8\u540c"),Object(r.b)("p",{parentName:"li"},"\u200b\t\t\t\t->  \u6b63\u5e38\u60c5\u51b5\u4e0b\u76f8\u540c\u7684\u503c\u4e00\u5b9a\u4ea7\u751f\u76f8\u540c\u7684HashCode\uff0c\u8fd9\u662fHashCode\u65b9\u6cd5\u7684\u4e8b")))),Object(r.b)("h3",{id:"141-hashsethashmap\u5b9e\u73b0\uff0c\u65e0\u5e8f"},"1.4.1 HashSet\u2014\u2014HashMap\u5b9e\u73b0\uff0c\u65e0\u5e8f"),Object(r.b)("blockquote",null,Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},"\u8fdb\u53bb\u5c31new\u4e86\u4e2aHashMap"),Object(r.b)("li",{parentName:"ul"},"\u81ea\u5df1\u7684\u6dfb\u52a0\u65b9\u6cd5\uff0c\u8c03\u7684\u662fHashMap\u7684put\u65b9\u6cd5\u3002\u4e3a\u4e86\u5f97\u5230\u90a3\u4e2aKey"),Object(r.b)("li",{parentName:"ul"},"\u81f3\u4e8eValue\uff0c\u7528PRESENT\u8868\u793a\uff0c\u901a\u8fc7\u67e5\u770b\u5176\u5b9a\u4e49\uff0c\u5f97\u77e5\u5c31\u662f\u4e00\u4e2a\u5199\u6b7b\u7684\u5e38\u91cf"))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'@Test\npublic void testHashSet() {\n    Set<Integer> set = new HashSet<Integer>();\n    set.add(123);\n    set.add(456);\n    set.add(null);\n\n    System.out.println(set.size());\n    System.out.println(set);\n\n    System.out.println("==================================");\n\n    Set set1 = new HashSet();\n    Person person1 = new Person("\u73ed", 18);\n    Person person2 = new Person("\u73ed", 18);\n\n    set1.add(person1);\n    set1.add(person2);\n\n    //\u5bf9\u8c61\u53ef\u4ee5\u91cd\u590d\n    //1.\u9700\u8981\u91cd\u5199Object\u7684equals\u65b9\u6cd5\n    //2.\u9700\u8981\u91cd\u5199hashCode\u65b9\u6cd5\n    //\u624d\u80fd\u4fdd\u8bc1Set\u5224\u65ad\u5230\u4e24\u4e2a\u5bf9\u8c61\u76f8\u540c\n    System.out.println(set1);\n    //\u6253\u5370\u51fa\u6765HashSet\u4e2d\u53ea\u6709\u4e00\u4e2aPerson\u5bf9\u8c61\n}\n')),Object(r.b)("h3",{id:"142-linkedhashset\u7ee7\u627fhashset\u3001hashmap\u5b9e\u73b0\u6570\u636e\u5b58\u50a8\u3001\u53cc\u5411\u94fe\u8868\u8bb0\u5f55\u987a\u5e8f"},"1.4.2 LinkedHashSet\u2014\u2014\u7ee7\u627fHashSet\u3001HashMap\u5b9e\u73b0\u6570\u636e\u5b58\u50a8\u3001\u53cc\u5411\u94fe\u8868\u8bb0\u5f55\u987a\u5e8f"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"/***\n* \u7ef4\u62a4\u4e86\u4e00\u4e2a\u6dfb\u52a0\u8fdb\u96c6\u5408\u4e2d\u7684\u987a\u5e8f\u3002\u5bfc\u81f4\u6211\u4eec\u904d\u5386LinkedHashSet\u96c6\u5408\u5143\u7d20\n* \u65f6\u662f\u6309\u7167\u6dfb\u52a0\u8fdb\u53bb\u7684\u987a\u5e8f\u904d\u5386\u7684  ->  \u8fd9\u4e0d\u4ee3\u8868\u662f\u6709\u5e8f\u7684\n*/\n@Test\npublic void testLinkedHashSet() {\n    Set set = new LinkedHashSet();\n    set.add(123);\n    set.add(456);\n    set.add(null);\n\n    System.out.println(set);\n\n    Iterator iterator = set.iterator();\n    while (iterator.hasNext()) {\n        System.out.println(iterator.next());\n    }\n}\n")),Object(r.b)("h3",{id:"141-treeset\u4e8c\u53c9\u6811\u5b9e\u73b0"},"1.4.1 TreeSet\u2014\u2014\u4e8c\u53c9\u6811\u5b9e\u73b0"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"1.\u5411TreeSet\u4e2d\u6dfb\u52a0\u7684\u5143\u7d20\u5fc5\u987b\u662f\u540c\u4e00\u4e2a\u7c7b\uff0c(\u81ea\u52a8\u521d\u59cb\u5316\u6cdb\u578b)"),Object(r.b)("p",{parentName:"blockquote"},"2.\u53ef\u4ee5\u6309\u7167\u6dfb\u52a0\u8fdb\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u7684\u6307\u5b9a\u7684\u987a\u5e8f\u904d\u5386\u3002 String,\u5305\u88c5\u7c7b\u9ed8\u8ba4\u6309\u7167\u4ece\u5c0f\u5230\u5927"),Object(r.b)("p",{parentName:"blockquote"},"3.\u81ea\u5b9a\u7c7b\u6ca1\u6709\u5b9e\u73b0",Object(r.b)("inlineCode",{parentName:"p"},"Comparable"),"\u63a5\u53e3\u65f6\uff0c\u5f53\u5411",Object(r.b)("inlineCode",{parentName:"p"},"TreeSet"),"\u4e2d\u6dfb\u52a0\u81ea\u5b9a\u4e49\u5bf9\u8c61\u65f6\uff0c\u62a5",Object(r.b)("inlineCode",{parentName:"p"},"ClassCastException")),Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"\u81ea\u7136\u6392\u5e8f\uff1a"),Object(r.b)("p",{parentName:"li"},"\u8981\u6c42\u81ea\u5b9a\u4e49\u7c7b\u5b9e\u73b0",Object(r.b)("inlineCode",{parentName:"p"},"java.lang.Comparable"),"\u63a5\u53e3\u5e76\u91cd\u5199",Object(r.b)("inlineCode",{parentName:"p"},"compareTo(Object obj)"),"\u5728\u6b64\u65b9\u6cd5\u4e2d\u6307\u5b9a\u6309\u7167\u81ea\u5b9a\u4e49\u7c7b\u7684\u54ea\u4e2a\u5c5e\u6027\u8fdb\u884c\u6392\u5e8f"),Object(r.b)("p",{parentName:"li"},"\u5411",Object(r.b)("inlineCode",{parentName:"p"},"TreeSet"),"\u4e2d\u6dfb\u52a0\u5143\u7d20\u65f6\u9996\u5148\u6309\u7167",Object(r.b)("inlineCode",{parentName:"p"},"compareTo()"),"\u8fdb\u884c\u6bd4\u8f83\uff0c\u4e00\u65e6\u8fd4\u56de0\uff0c\u867d\u7136\u4ec5\u662f\u4e24\u4e2a\u5bf9\u8c61\u7684",Object(r.b)("inlineCode",{parentName:"p"},"age"),"\u5c5e\u6027\u503c\u76f8\u540c\uff0c\u4f46",Object(r.b)("inlineCode",{parentName:"p"},"TreeSet"),"\u4f1a\u8ba4\u4e3a\u4e24\u4e2a\u5bf9\u8c61\u90fd\u662f\u76f8\u540c\u7684\uff0c\u8fdb\u800c\u540e\u4e00\u4e2a\u5bf9\u8c61\u6dfb\u52a0\u4e0d\u8fdb\u53bb",Object(r.b)("inlineCode",{parentName:"p"},"TreeSet")),Object(r.b)("p",{parentName:"li"},"\u5bf9\u4e8e",Object(r.b)("inlineCode",{parentName:"p"},"TreeSet"),":  ",Object(r.b)("inlineCode",{parentName:"p"},"compareTo()")," -> ",Object(r.b)("inlineCode",{parentName:"p"},"hashCode()")," -> ",Object(r.b)("inlineCode",{parentName:"p"},"equals()")," \u4e09\u8005\u4fdd\u6301\u4e00\u81f4"),Object(r.b)("p",{parentName:"li"},"\u5728",Object(r.b)("inlineCode",{parentName:"p"},"compareTo()"),"\u4e2d\uff0c\u5148\u6309\u4e00\u4e2a\u5c5e\u6027\u6392\u5e8f\uff0c\u5982\u679c\u76f8\u540c\u518d\u6309\u53e6\u4e00\u4e2a\u5c5e\u6027\u6392\u5e8f")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"\u5b9a\u5236\u6392\u5e8f:"),Object(r.b)("p",{parentName:"li"},"1.\u521b\u5efa\u4e00\u4e2a\u5b9e\u73b0\u4e86",Object(r.b)("inlineCode",{parentName:"p"},"Comparator"),"\u63a5\u53e3\u7684\u533f\u540d\u7c7b\u5bf9\u8c61\n2.\u5c06\u6b64\u5bf9\u8c61\u4f5c\u4e3a\u5f62\u53c2\u4f20\u9012\u7ed9",Object(r.b)("inlineCode",{parentName:"p"},"TreeSet"),"\u7684\u6784\u9020\u65b9\u6cd5\n3.\u5411",Object(r.b)("inlineCode",{parentName:"p"},"TreeSet"),"\u4e2d\u6dfb\u52a0",Object(r.b)("inlineCode",{parentName:"p"},"Comparator"),"\u63a5\u53e3\u4e2d",Object(r.b)("inlineCode",{parentName:"p"},"compareTo"),"\u65b9\u6cd5\u6d89\u53ca\u5230\u7684",Object(r.b)("inlineCode",{parentName:"p"},"Object object"))))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"\u81ea\u7136\u6392\u5e8f")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'@Test\npublic void testTreeSet() {\n    Set set = new TreeSet();\n    set.add(new Person("CC", 23));\n    set.add(new Person("MM", 21));\n    set.add(new Person("GG", 25));\n    set.add(new Person("JJ", 24));\n    set.add(new Person("DD", 20));\n    set.add(new Person("AA", 20));\n    set.add(new Person("AA", 20));\n\n    for (Object obj : set) {\n        System.out.println(obj);\n    }\n}\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"Person{name='AA', age=20}\nPerson{name='DD', age=20}\nPerson{name='MM', age=21}\nPerson{name='CC', age=23}\nPerson{name='JJ', age=24}\nPerson{name='GG', age=25}\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"\u5b9a\u5236\u6392\u5e8f")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'@Test\npublic void testTreeSet2() {\n    //new\u4e00\u4e2a\u533f\u540d\u5b9e\u73b0Comparator\u63a5\u53e3\u7684\u5bf9\u8c61\uff0c\u5927\u62ec\u53f7\u91cd\u5199\u63a5\u53e3\u65b9\u6cd5\n    Comparator comparator = new Comparator() {\n        //\u5411TreeSet\u4e2d\u6dfb\u52a0Customer\u7c7b\u7684\u5bf9\u8c61\uff0c\u5728\u6b64Comparator\u65b9\u6cd5\u4e2d\u6307\u660e\u6309\u7167Customer\u7684\u54ea\u4e2a\u5c5e\u6027\u6392\u5e8f\n        @Override\n        public int compare(Object o1, Object o2) {\n            if (o1 instanceof Customer && o2 instanceof Customer) {\n                Customer customer1 = (Customer) o1;\n                Customer customer2 = (Customer) o2;\n                int flagId = customer1.getId().compareTo(customer2.getId());\n                if (flagId == 0) {\n                    return customer1.getName().compareTo(customer2.getName());\n                }\n                return flagId;\n            }\n            return 0;\n        }\n    };\n\n    Set set = new TreeSet(comparator);\n    set.add(new Customer("AA", 1003));\n    set.add(new Customer("BB", 1002));\n    set.add(new Customer("GG", 1004));\n    set.add(new Customer("CC", 1001));\n    set.add(new Customer("DD", 1007));\n    set.add(new Customer("AA", 1007));\n\n    for (Object object : set) {\n        System.out.println(object);\n    }\n}\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"Customer{name='CC', id=1001}\nCustomer{name='BB', id=1002}\nCustomer{name='AA', id=1003}\nCustomer{name='GG', id=1004}\nCustomer{name='AA', id=1007}\nCustomer{name='DD', id=1007}\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'@Test\npublic void testTreeSet3() {\n    Set set = new TreeSet(new Comparator() {\n        @Override\n        public int compare(Object o1, Object o2) {\n            if (o1 instanceof Customer && o2 instanceof Customer) {\n                Customer customer1 = (Customer) o1;\n                Customer customer2 = (Customer) o2;\n                int flagId = customer1.getId().compareTo(customer2.getId());\n                if (flagId == 0) {\n                    return customer1.getName().compareTo(customer2.getName());\n                }\n                return flagId;\n            }\n            return 0;\n        }\n    });\n\n    set.add(new Customer("AA", 1003));\n    set.add(new Customer("BB", 1002));\n    set.add(new Customer("GG", 1004));\n    set.add(new Customer("CC", 1001));\n    set.add(new Customer("DD", 1007));\n    set.add(new Customer("AA", 1007));\n\n    for (Object object : set) {\n        System.out.println(object);\n    }\n}\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"Customer{name='CC', id=1001}\nCustomer{name='BB', id=1002}\nCustomer{name='AA', id=1003}\nCustomer{name='GG', id=1004}\nCustomer{name='AA', id=1007}\nCustomer{name='DD', id=1007}\n")),Object(r.b)("h2",{id:"15-map\u63a5\u53e3"},"1.5 Map\u63a5\u53e3"),Object(r.b)("blockquote",null,Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Map"),"\u63a5\u53e3\u4e0e",Object(r.b)("inlineCode",{parentName:"li"},"Collection"),"\u5e76\u5217\u5b58\u5728\uff0c\u7528\u4e8e\u4fdd\u5b58\u5177\u6709\u6620\u5c04\u5173\u7cfb\u7684\u6570\u636e Key-Value"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Map"),"\u4e2d\u7684Key\u548cValue\u90fd\u53ef\u4ee5\u662f\u4efb\u4f55\u5f15\u7528\u7c7b\u578b\u7684\u6570\u636e"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Map"),"\u4e2d\u7684Key\u7528",Object(r.b)("inlineCode",{parentName:"li"},"Set"),"\u6765\u5b58\u653e\uff0c\u4e0d\u5141\u8bb8\u91cd\u590d"),Object(r.b)("li",{parentName:"ul"},"\u5e38\u7528String\u7c7b\u4f5c\u4e3a",Object(r.b)("inlineCode",{parentName:"li"},"Map"),'\u7684"\u952e"'),Object(r.b)("li",{parentName:"ul"},"key\u548cvalue\u4e4b\u95f4\u5b58\u5728\u5355\u5411\u4e00\u4e00\u6620\u5c04\uff0c\u5373\u901a\u8fc7\u6307\u5b9a\u7684key\u603b\u80fd\u627e\u5230\u552f\u4e00\u7684\uff0c\u786e\u5b9a\u7684value"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Map")," -> ",Object(r.b)("inlineCode",{parentName:"li"},"[ Set : Collection ]")," ->  ",Object(r.b)("inlineCode",{parentName:"li"},"Entry"),"\u4e00\u6761\u8bb0\u5f55\n\u5f53",Object(r.b)("inlineCode",{parentName:"li"},"HashMap"),"\u7684\u503c\u90fd\u4e3a",Object(r.b)("inlineCode",{parentName:"li"},"null"),",\u5219",Object(r.b)("inlineCode",{parentName:"li"},"HashMap"),"\u9000\u5316\u4e3a",Object(r.b)("inlineCode",{parentName:"li"},"HashSet")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"\u5b9e\u73b0\u7c7b\uff1a")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"HashMap")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"LinkedHashMap")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"TreeMap")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"HashTable"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Properties"))))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"\u6dfb\u52a0\u3001\u5220\u9664\u64cd\u4f5c\uff1a")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Object put(Object key, Object value)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Object remove(Object key)")," \u6309\u7167\u6307\u5b9aKey\u5220\u9664Entry\uff0c\u8fd4\u56de\u503c\u662fvalue"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"void putAll(Map t)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"void clear()"))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"\u904d\u5386")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Set keySet()")," \u8fd4\u56dekey\u7684\u96c6\u5408"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Collection values()"),"  \u8fd4\u56devalue\u7684\u96c6\u5408"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Set<Map.Entry<K, V>> entrySet()"),"  \u8fd4\u56de\u952e\u503c\u5bf9\u7684\u96c6\u5408")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"\u5143\u7d20\u67e5\u8be2\u7684\u64cd\u4f5c")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Object get(Object key)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"boolean containsKey(Object key)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"boolean containsValue(Object value)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"int size()")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"boolean isEmpty()")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"boolean equals(Object obj)"))),Object(r.b)("h3",{id:"151-properties\u7c7b"},"1.5.1 Properties\u7c7b"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"jdbc.properties\u6587\u4ef6")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-properties"}),"user=root\npassword=rootpass\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"\u4f7f\u7528",Object(r.b)("inlineCode",{parentName:"li"},"Properties"),"\u52a0\u8f7dproperties\u6587\u4ef6")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'/***\n* Properties\u7c7b\n* load(\u8f93\u5165\u6d41)\n*/\n@Test\npublic void testProperties() throws IOException, FileNotFoundException {\n    Properties properties = new Properties();\n    properties.load(new FileInputStream(new File("jdbc.properties")));\n    String user = properties.getProperty("user");\n    System.out.println(user);\n    //root\n}\n')),Object(r.b)("h3",{id:"152-treemap\u7c7b\u57fa\u4e8e\u4e8c\u53c9\u6811"},"1.5.2 TreeMap\u7c7b\u2014\u2014\u57fa\u4e8e\u4e8c\u53c9\u6811"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"\u5b9a\u5236\u6392\u5e8f")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'@Test\npublic void testTreeMap2() {\n    Comparator comparator = new Comparator() {\n        @Override\n        public int compare(Object o1, Object o2) {\n            if (o1 instanceof Customer && o2 instanceof Customer) {\n                Customer customer1 = (Customer) o1;\n                Customer customer2 = (Customer) o2;\n                int flagId = customer1.getId().compareTo(customer2.getId());\n                if (flagId == 0) {\n                    return customer1.getName().compareTo(customer2.getName());\n                }\n                return flagId;\n            }\n            return 0;\n        }\n    };\n\n    Map map = new TreeMap(comparator);\n    map.put(new Customer("AA", 1001), 87);\n    map.put(new Customer("CC", 1001), 67);\n    map.put(new Customer("MM", 1004), 97);\n    map.put(new Customer("GG", 1002), 37);\n\n    for (Object key : map.keySet()) {\n        System.out.println(key + " ---\x3e " + map.get(key));\n    }\n}\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"Customer{name='AA', id=1001} ---\x3e 87\nCustomer{name='CC', id=1001} ---\x3e 67\nCustomer{name='GG', id=1002} ---\x3e 37\nCustomer{name='MM', id=1004} ---\x3e 97\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"\u6309key\u6392\u5e8f")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'/***\n*  TreeMap\n*  - \u6309\u7167\u6dfb\u52a0\u8fdbMap\u4e2d\u7684\u5143\u7d20\u7684\u6307\u5b9a\u5c5e\u6027key\u8fdb\u884c\u6392\u5e8f\n*     \u6545\uff0c\u8981\u6c42Key\u662f\u540c\u4e00\u4e2a\u7c7b\u7684\u5bf9\u8c61\n*/\n@Test\npublic void testTreeMap() {\n    Map map = new TreeMap();\n    map.put(new Person("AA", 23), 89);\n    map.put(new Person("AA", 21), 99);\n    map.put(new Person("MM", 22), 79);\n    map.put(new Person("GG", 33), 99);\n    map.put(new Person("JJ", 13), 69);\n\n    for (Object key : map.keySet()) {\n        System.out.println(key + " ---\x3e " + map.get(key));\n    }\n}\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"Person{name='JJ', age=13} ---\x3e 69\nPerson{name='AA', age=21} ---\x3e 99\nPerson{name='MM', age=22} ---\x3e 79\nPerson{name='AA', age=23} ---\x3e 89\nPerson{name='GG', age=33} ---\x3e 99\n")),Object(r.b)("h3",{id:"153-linkedhashmap\u7c7b"},"1.5.3 LinkedHashMap\u7c7b"),Object(r.b)("blockquote",null,Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},"\u904d\u5386\u7ed3\u679c\u4e0e\u5b58\u653e\u987a\u5e8f\u4e00\u81f4"),Object(r.b)("li",{parentName:"ul"},"\u57fa\u4e8e\u94fe\u8868\u5b9e\u73b0"))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'/***\n* LinkedHashMap\n* \u904d\u5386\u7ed3\u679c\u4e0e\u5b58\u653e\u987a\u5e8f\u4e00\u81f4\n*/\n@Test\npublic void testMap3() {\n    Map map = new LinkedHashMap();\n    map.put("key", "value");\n    map.put("AA", 123);\n    map.put("BB", 456);\n    map.put(123, "bb");\n    map.put(null, null);\n\n    for (Object object : map.entrySet()) {\n        Map.Entry entry = (Map.Entry) object;\n        System.out.println(entry.getKey() + " -> " + entry.getValue());\n    }\n}\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"key -> value\nAA -> 123\nBB -> 456\n123 -> bb\nnull -> null\n")),Object(r.b)("h3",{id:"154-hashmap\u7c7b"},"1.5.4 HashMap\u7c7b"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"\u904d\u5386")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'/***\n* \u5982\u4f55\u904d\u5386Map\n*  - \u904d\u5386\u6240\u6709Key\n*  - \u904d\u5386\u6240\u6709Value\n*  - \u904d\u5386\u6240\u6709Entry\n*/\n@Test\npublic void testMap2() {\n    Map map = new HashMap();\n    map.put("key", "value");\n    map.put("AA", 123);\n    map.put("BB", 456);\n    map.put(123, "bb");\n    map.put(null, null);\n\n    System.out.println(map.keySet());\n    System.out.println(map.values());\n\n    for (Object object : map.entrySet()) {\n        Map.Entry entry = (Map.Entry) object;\n        System.out.println("Key : " + entry.getKey()\n                           + " | Value : " + entry.getValue());\n    }\n}\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"[AA, BB, null, 123, key]\n[123, 456, null, bb, value]\nKey : AA | Value : 123\nKey : BB | Value : 456\nKey : null | Value : null\nKey : 123 | Value : bb\nKey : key | Value : value\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Key\u662fSet\u7c7b\u578b\u4e0d\u53ef\u91cd\u590d\uff1bValue\u662fCollection\u7c7b\u578b\uff0c\u53ef\u91cd\u590d\uff1bEntry\u952e\u503c\u5bf9\uff0c\u7528Set\u5b58\u653e\uff0c\u4e0d\u53ef\u91cd\u590d")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"\u6dfb\u52a0\u5143\u7d20\u65f6\uff0c\u8c03\u7528Key\u7684",Object(r.b)("inlineCode",{parentName:"p"},"equals"),"\u65b9\u6cd5\uff1b \u952e\u91cd\u590d\u65f6\uff0cvalue\u4f1a\u88ab\u65b0\u503c\u8986\u76d6")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'@Test\npublic void testMap1() {\n    Map map = new HashMap();\n    map.put("key", "value");\n    map.put("AA", 123);\n    map.put("BB", 456);\n    map.put(123, "bb");\n    map.put(null, null);\n    System.out.println(map.size());\n\n    System.out.println(map.remove("BB"));\n}\n')),Object(r.b)("h3",{id:"155-hashtable\u7c7b"},"1.5.5 HashTable\u7c7b"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"HashTable\u662f\u9057\u7559\u7c7b\uff0c\u5f88\u591a\u529f\u80fd\u90fd\u4e0eHashMap\u7c7b\u4f3c\uff0c\u4e0d\u540c\u7684\u662f\u5b83\u7ee7\u627f\u81eaDictionary\u7c7b\uff0c\u5e76\u4e14\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u4e70\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5199HashTable\uff0c\u5e76\u53d1\u6027\u4e0d\u5982CuncurrentHashMap")),Object(r.b)("h2",{id:"16-iterator"},"1.6 Iterator"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"\u7528\u6765\u904d\u5386\u96c6\u5408")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'public class TestIterator {\n\n    @Test\n    public void test1() {\n        Collection collection = new ArrayList();\n        collection.add(123);\n        collection.add("AA");\n        collection.add(new Date());\n        collection.add("BB");\n        collection.add(new Person("\u8c46\u8c46", 18));\n\n        Iterator iterator = collection.iterator();\n        while (iterator.hasNext()) {\n            System.out.println(iterator.next());\n        }\n    }\n\n    @Test\n    public void test2() {\n        Collection collection = new ArrayList();\n        collection.add(123);\n        collection.add("AA");\n        collection.add(new Date());\n        collection.add("BB");\n        collection.add(new Person("\u8c46\u8c46", 18));\n\n        for (Object object : collection) {\n            System.out.println(object);\n        }\n    }\n\n    //\u9762\u8bd5\u9898\n    @Test\n    public void testFor3() {\n        String[] str = new String[]{"AA", "BB", "DD"};\n        for (int i = 0; i < str.length; i++) {\n            str[i] = i + "";\n        }\n\n        for (int i = 0; i < str.length; i++) {\n            System.out.println(str[i]);\n        }\n        //\u95ee\u6267\u884c\u7ed3\u679c  0 1 2\n    }\n\n    //\u9762\u8bd5\u9898\n    @Test\n    public void testFor4() {\n        String[] str = new String[]{"AA", "BB", "DD"};\n        for (String s : str) {\n            s = "MM";\n            System.out.println(s);\n        }\n\n        for (int i = 0; i < str.length; i++) {\n            System.out.println(str[i]);\n        }\n        //\u95ee\u6267\u884c\u7ed3\u679c  MM MM MM  AA BB DD\n    }\n}\n')),Object(r.b)("h2",{id:"17-collections\u4e0earrays\u5de5\u5177\u7c7b"},"1.7 Collections\u4e0eArrays\u5de5\u5177\u7c7b"),Object(r.b)("h3",{id:"171-collections\u5de5\u5177\u7c7b"},"1.7.1 Collections\u5de5\u5177\u7c7b"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Collections\u5de5\u5177\u7c7b static\u65b9\u6cd5 , \u4e0d\u9700\u8981\u521b\u5efa\u5bf9\u8c61")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"reverse(List)"),"\uff1a\u53cd\u8f6cList\u4e2d\u5143\u7d20\u7684\u987a\u5e8f"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"shuffle(List)"),": \u5bf9List\u96c6\u5408\u5143\u7d20\u8fdb\u884c\u968f\u673a\u6392\u5e8f"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"sort(List)"),": \u6839\u636e\u5143\u7d20\u7684\u81ea\u7136\u987a\u5e8f\u5bf9\u6307\u5b9aList\u96c6\u5408\u5143\u7d20\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"swap(List,i,j)"),"\u53ca\u90a3\u4e2a\u6307\u5b9alist\u96c6\u5408\u4e2d\u7684i\u5904\u5143\u7d20\u548cj\u5904\u5143\u7d20\u8fdb\u884c\u4ea4\u6362"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Object max(Collection)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Object max(Collection, Comparator)")," \u5b9a\u5236\u6392\u5e8f\u89c4\u5219\u4e0b\u7684\u6700\u5927"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"int frequency(Collection, Object)")," \u6307\u5b9a\u5143\u7d20\u5728\u96c6\u5408\u4e2d\u51fa\u73b0\u7684\u6b21\u6570"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"void copy(List destination, List source)")," \u5c06source\u4e2d\u7684\u5185\u5bb9\u590d\u5236\u5230destination\u4e2d"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"boolean repalceAll(List list, Object oldValue, Object newValue)"),"\u5c06\u65e7\u503c\u66ff\u6362\u4e3a\u65b0\u503c"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"reverseOrder()"),"    \u63d0\u4f9b\u4e00\u4e2a\u964d\u5e8f",Object(r.b)("inlineCode",{parentName:"li"},"Comparator"),"\u5b9e\u73b0\u7c7b")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Collections\u7c7b\u4e2d\u63d0\u4f9b\u4e86\u591a\u4e2a",Object(r.b)("inlineCode",{parentName:"p"},"synchronizedXxx()"),"\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u53ef\u4f7f\u5c06\u6307\u5b9a\u96c6\u5408\u5305\u88c5\u6210\u7ebf\u7a0b\u540c\u6b65\u96c6\u5408\uff0c\u4ece\u800c\u53ef\u4ee5\u89e3\u51b3\u591a\u7ebf\u7a0b\u5e76\u53d1\u8bbf\u95ee\u96c6\u5408\u65f6\u7684\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"@Test\npublic void test() {\n    Collection coll = new ArrayList();\n    Collections.synchronizedCollection(coll);\n\n    Map map = new HashMap();\n    Collections.synchronizedMap(map);\n}\n")),Object(r.b)("h3",{id:"172-arrays\u5de5\u5177\u7c7b"},"1.7.2 Arrays\u5de5\u5177\u7c7b"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Arrays\u5de5\u5177\u7c7b static\u65b9\u6cd5 , \u4e0d\u9700\u8981\u521b\u5efa\u5bf9\u8c61")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"\u5e38\u7528API:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"toString"),"  \u5c06\u6570\u7ec4\u8f6c\u6362\u4e3a\u53ef\u8f93\u51fa\u7684\u5b57\u7b26\u4e32"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"asList")," \u5c06\u53c2\u6570\u5305\u88c5\u4e3a\u4e00\u4e2a",Object(r.b)("inlineCode",{parentName:"li"},"List")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"sort")," \u9ed8\u8ba4\u5c06\u6570\u7ec4\u5347\u5e8f\u6392\u5e8f")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'@Test\npublic void testArrays() {\n    Integer[] arr = {1, 3, 2};\n    System.out.println("arr =" + Arrays.toString(arr));\n\n    List<Integer> asList = Arrays.asList(2, 3, 4);\n    System.out.println("as list -> " + asList);\n\n    Arrays.sort(arr);\n    System.out.println("arr after sort ->  " + Arrays.toString(arr));\n\n    //\u964d\u5e8f\n    Arrays.sort(arr, new Comparator<Integer>() {\n        @Override\n        public int compare(Integer o1, Integer o2) {\n            return o2 - o1;\n        }\n    });\n    //lambda\u8868\u8fbe\u5f0f\u5199\u6cd5\n    //Arrays.sort(arr, (o1, o2) -> o2 - o1);\n    System.out.println("\u7528Comparator\u63a5\u53e3\u964d\u5e8f -> " + Arrays.toString(arr));\n\n    arr = new Integer[]{1, 3, 2};\n    //\u964d\u5e8f\n    Arrays.sort(arr, Collections.reverseOrder());\n    System.out.println("\u7528Collections.reverseOrder()\u964d\u5e8f -> " + Arrays.toString(arr));\n}\n')),Object(r.b)("h2",{id:"18-comparator\u4e0ecomparable\u6392\u5e8f\u63a5\u53e3"},"1.8 Comparator\u4e0eComparable\u6392\u5e8f\u63a5\u53e3"),Object(r.b)("h3",{id:"181-comparator"},"1.8.1 Comparator"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"\u6848\u4f8b: \u5148\u6309id\u5347\u5e8f\u6392\u5e8f\uff0c\u5982\u679cid\u76f8\u7b49\uff0c\u6309name\u5347\u5e8f\u6392\u5e8f"),Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},"\u91cd\u5199",Object(r.b)("inlineCode",{parentName:"li"},"compare"),"\u65b9\u6cd5"))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'@Test\npublic void testTreeSet2() {\n    //new\u4e00\u4e2a\u533f\u540d\u5b9e\u73b0Comparator\u63a5\u53e3\u7684\u5bf9\u8c61\uff0c\u5927\u62ec\u53f7\u91cd\u5199\u63a5\u53e3\u65b9\u6cd5\n    Comparator comparator = new Comparator() {\n        //\u5411TreeSet\u4e2d\u6dfb\u52a0Customer\u7c7b\u7684\u5bf9\u8c61\uff0c\u5728\u6b64Comparator\u65b9\u6cd5\u4e2d\u6307\u660e\u6309\u7167Customer\u7684\u54ea\u4e2a\u5c5e\u6027\u6392\u5e8f\n        @Override\n        public int compare(Object o1, Object o2) {\n            if (o1 instanceof Customer && o2 instanceof Customer) {\n                Customer customer1 = (Customer) o1;\n                Customer customer2 = (Customer) o2;\n                int flagId = customer1.getId().compareTo(customer2.getId());\n                if (flagId == 0) { //\u4e24\u4e2a\u503c\u76f8\u7b49\n                    return customer1.getName().compareTo(customer2.getName());\n                }\n                return flagId;\n            }\n            return 0;\n        }\n    };\n\n    Set set = new TreeSet(comparator);\n    set.add(new Customer("AA", 1003));\n    set.add(new Customer("BB", 1002));\n    set.add(new Customer("GG", 1004));\n    set.add(new Customer("CC", 1001));\n    set.add(new Customer("DD", 1007));\n    set.add(new Customer("AA", 1007));\n\n    for (Object object : set) {\n        System.out.println(object);\n    }\n}\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"Customer{name='CC', id=1001}\nCustomer{name='BB', id=1002}\nCustomer{name='AA', id=1003}\nCustomer{name='GG', id=1004}\nCustomer{name='AA', id=1007}\nCustomer{name='DD', id=1007}\n")),Object(r.b)("h3",{id:"182-comparable"},"1.8.2 Comparable"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Comparable\u63a5\u53e3\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u8c61\u6570\u7ec4\u6392\u5e8f\uff0c\u4e5f\u5c31\u53ef\u4ee5\u5bf9\u6574\u578b\u6570\u7ec4\u8fdb\u884c\u76f4\u63a5\u6392\u5e8f"),Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},"\u91cd\u5199",Object(r.b)("inlineCode",{parentName:"li"},"compareTo"),"\u65b9\u6cd5"))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'\nclass Node implements Comparable<Node> {\n    private int value;\n    \n    public Node(int value) {\n        this.value = value;\n    }\n    \n    @Override\n    public int compareTo(Node node) {\n          if (this.value == node.value) {  \n            return 0;  \n        } else {  \n            return this.value > node.value ? 1 : -1;   \n        }  \n    }\n    \n    public static void sortInt(int[] a) {\n        Node[] node = new Node[a.length];\n        for(int i = 0; i < a.length; i ++) {\n            node[i]=new Node(a[i]);\n        }\n        Arrays.sort(node);\n        for(int i = 0; i < a.length; i ++) {\n            a[i] = node[i].value;\n        }\n    }\n    \n    public static void main(String[] args) {\n        int[] a = {1, 4, 5, 7, 6, 5, 9, 12, 34, 23};\n        sortInt(a);\n        for(int i = 0; i < a.length; i ++) {\n            System.out.print(a[i] + " ");\n        }\n    }\n}\n')))}p.isMDXComponent=!0}}]);